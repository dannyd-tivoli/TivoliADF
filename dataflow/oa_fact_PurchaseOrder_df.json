{
	"name": "oa_fact_PurchaseOrder_df",
	"properties": {
		"folder": {
			"name": "Tivoli Data Warehouse"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Reception_db",
						"type": "DatasetReference"
					},
					"name": "podetail"
				},
				{
					"dataset": {
						"referenceName": "TivoliDW_db",
						"type": "DatasetReference"
					},
					"name": "Supplier"
				},
				{
					"dataset": {
						"referenceName": "TivoliDW_db",
						"type": "DatasetReference"
					},
					"name": "DocumentType"
				},
				{
					"dataset": {
						"referenceName": "TivoliDW_db",
						"type": "DatasetReference"
					},
					"name": "TransactionType"
				},
				{
					"dataset": {
						"referenceName": "TivoliDW_db",
						"type": "DatasetReference"
					},
					"name": "ActivityCode"
				},
				{
					"dataset": {
						"referenceName": "TivoliDW_db",
						"type": "DatasetReference"
					},
					"name": "WorkStage"
				},
				{
					"dataset": {
						"referenceName": "TivoliDW_db",
						"type": "DatasetReference"
					},
					"name": "Project"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "FactPT",
						"type": "DatasetReference"
					},
					"name": "FactSync"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumns"
				},
				{
					"name": "Staging"
				},
				{
					"name": "AlterRowSettings"
				},
				{
					"name": "ActivityCodeLookup"
				},
				{
					"name": "WorkStageLookup"
				},
				{
					"name": "ProjectLookup"
				},
				{
					"name": "Supplierx"
				}
			],
			"scriptLines": [
				"parameters{",
				"     LastRunDate as string (\"2022-05-09 00:00:00\")",
				"}",
				"source(output(",
				"          OrderNumber as integer,",
				"          OrderReference as string,",
				"          SupplierCode as string,",
				"          OrderDate as date,",
				"          RevDate as date,",
				"          OrderValue as decimal(17,2),",
				"          CreatedDate as date,",
				"          OrderStatus as string,",
				"          DeliveryPostCode as string,",
				"          Branch as string,",
				"          OutstandingValue as decimal(17,2),",
				"          CustomerReference as string,",
				"          CurrencyCode as string,",
				"          CurrencyRate as decimal(21,6),",
				"          OrderBaseValue as decimal(17,2),",
				"          OrderBaseOutstanding as decimal(17,2),",
				"          Period as integer,",
				"          Year as string,",
				"          CreatedTimeID as integer,",
				"          EndDate as date,",
				"          RequestedBy as string,",
				"          DeliveryAddress as string,",
				"          InvoiceAddress as string,",
				"          OrderAddress as string,",
				"          OrderPostCode as string,",
				"          MatchDate as date,",
				"          LineNo as integer,",
				"          LineTotal as decimal(17,2),",
				"          Price as decimal(17,5),",
				"          Discount as decimal(17,2),",
				"          Quantity as decimal(18,3),",
				"          OutStandingTotal as decimal(17,2),",
				"          ItemDescription as string,",
				"          Units as string,",
				"          VatCode as string,",
				"          ActivityCode as string,",
				"          OutstandingQty as decimal(18,3),",
				"          LineStatus as string,",
				"          AllocatedQty as decimal(18,3),",
				"          DispatchedQty as decimal(18,3),",
				"          UnderPickedQty as decimal(18,3),",
				"          NewPrice as decimal(17,5),",
				"          BaseValue as decimal(17,2),",
				"          BaseValueOutstanding as decimal(17,2),",
				"          DueDate as date,",
				"          BasePrice as decimal(17,5),",
				"          Project as string,",
				"          AmendmentDate as date,",
				"          Workstage as string,",
				"          OALastModifiedDateTime as string,",
				"          UpdatedDateTime as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     inputs:['@LastModifedDate' -> ($LastRunDate)],",
				"     procedureName: 'sp_oa_podetail_DW',",
				"     schemaName: 'dbo',",
				"     resultSet: true,",
				"     format: 'procedure') ~> podetail",
				"source(output(",
				"          SupplierID as integer,",
				"          SupplierCode as string,",
				"          FromDate as date,",
				"          ToDate as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT  [SupplierID]\\n      ,[SupplierCode]\\n      ,[FromDate]\\n      ,[ToDate]\\n  FROM [DW].[DimSupplier]',",
				"     format: 'query') ~> Supplier",
				"source(output(",
				"          DocumentTypeID as integer,",
				"          DocID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT [DocumentTypeID]\\n      ,[DocID]\\n  FROM [DW].[DimDocumentType]',",
				"     format: 'query') ~> DocumentType",
				"source(output(",
				"          TransactionTypeID as integer,",
				"          trtyp as string,",
				"          LedgerCode as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT[TransactionTypeID]\\n      ,[trtyp], [LedgerCode]\\n  FROM [DW].[DimTransactionType]',",
				"     format: 'query') ~> TransactionType",
				"source(output(",
				"          ActivityCodeID as integer,",
				"          ActivityCode as string,",
				"          FromDate as date,",
				"          ToDate as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT [ActivityCodeID]\\n      ,[ActivityCode]\\n      ,[FromDate]\\n      ,[ToDate]\\n  FROM [DW].[DimActivityCode]',",
				"     format: 'query') ~> ActivityCode",
				"source(output(",
				"          WorkStageID as integer,",
				"          WorkStageCode as string,",
				"          FromDate as date,",
				"          ToDate as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT [WorkStageID]\\n      ,[WorkStageCode]\\n       ,[FromDate]\\n       ,[ToDate]\\n  FROM [DW].[DimWorkStage]',",
				"     format: 'query') ~> WorkStage",
				"source(output(",
				"          ProjectID as integer,",
				"          ProjectCode as string,",
				"          FromDate as date,",
				"          ToDate as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT [ProjectID]\\n      ,[ProjectCode]\\n      ,[FromDate]\\n      ,[ToDate]\\n  FROM [DW].[DimProject]',",
				"     format: 'query') ~> Project",
				"ProjectLookup derive(NewCostCentreID = iif(isNull(CostCentreID), -1,CostCentreID),",
				"          NewDocumentID = iif(isNull(DocumentTypeID), -1, DocumentTypeID),",
				"          NewTransactionTypeID = iif(isNull(TransactionTypeID), -1, TransactionTypeID),",
				"          LastModifiedDate = currentUTC('GMT'),",
				"          NewActivityCodeID = iif(isNull(ActivityCodeID), -1, ActivityCodeID),",
				"          DocumentDateID = toInteger(toString(docdate, 'yyyyMMdd')),",
				"          InputDateID = toInteger(toString(inputdate, 'yyyyMMdd')),",
				"          YearNo = toInteger(yearno),",
				"          Period = toInteger(period),",
				"          NewWorkStageID = iif(isNull(WorkStageID), -1, WorkStageID),",
				"          NewProjectID = iif(isNull(ProjectID), -1, ProjectID)) ~> DerivedColumns",
				"DerivedColumns select(mapColumn(",
				"          unqkey,",
				"          DocumentDateID,",
				"          CostCentreID = NewCostCentreID,",
				"          DocumentTypeID = NewDocumentID,",
				"          TransactionTypeID = NewTransactionTypeID,",
				"          LastModifiedDateTime = LastModifiedDate,",
				"          ActivityCodeID = NewActivityCodeID,",
				"          SourceReference = sourceref,",
				"          Description = description,",
				"          BaseValue = baseval,",
				"          CurrentValue = currvalue,",
				"          Quantity = qty,",
				"          QuantityUnits = qunit,",
				"          YearNo,",
				"          Period,",
				"          BatchReference = batchref,",
				"          InputDateID,",
				"          DocumentNumber = docnumber,",
				"          VatCode = {vat-code},",
				"          LineNo = line_no,",
				"          ProjectID = NewProjectID,",
				"          WorkStageID = NewWorkStageID,",
				"          Currency = currency,",
				"          Resource = resource,",
				"          unqkey,",
				"          Deleted = del",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Staging",
				"Staging alterRow(upsertIf(true())) ~> AlterRowSettings",
				"Supplierx, ActivityCode lookup(expensecode == ActivityCode@ActivityCode",
				"     && docdate >= ActivityCode@FromDate",
				"     && docdate <= ActivityCode@ToDate,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'right')~> ActivityCodeLookup",
				"ActivityCodeLookup, WorkStage lookup(workstage == WorkStageCode",
				"     && docdate >= WorkStage@FromDate",
				"     && docdate <= WorkStage@ToDate,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'right')~> WorkStageLookup",
				"WorkStageLookup, Project lookup(project == ProjectCode",
				"     && docdate >= Project@FromDate",
				"     && docdate <= Project@ToDate,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'right')~> ProjectLookup",
				"podetail, Supplier lookup(podetail@SupplierCode == Supplier@SupplierCode",
				"     && OrderDate >= FromDate",
				"     && OrderDate <= ToDate,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'right')~> Supplierx",
				"AlterRowSettings sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ID as integer,",
				"          unqkey as string,",
				"          CostCentreID as integer,",
				"          DocumentTypeID as integer,",
				"          TransactionTypeID as integer,",
				"          ActivityCodeID as integer,",
				"          WorkStageID as integer,",
				"          ProjectID as integer,",
				"          DocumentDateID as integer,",
				"          InputDateID as integer,",
				"          BatchReference as string,",
				"          DocumentNumber as integer,",
				"          LineNo as integer,",
				"          YearNo as integer,",
				"          Period as integer,",
				"          SourceReference as string,",
				"          Description as string,",
				"          BaseValue as decimal(18,2),",
				"          CurrentValue as decimal(18,2),",
				"          Quantity as decimal(18,3),",
				"          QuantityUnits as string,",
				"          VatCode as string,",
				"          Resource as string,",
				"          Currency as string,",
				"          Deleted as boolean,",
				"          LastModifiedDateTime as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['unqkey'],",
				"     format: 'table',",
				"     batchSize: 10000,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          unqkey,",
				"          CostCentreID,",
				"          DocumentTypeID,",
				"          TransactionTypeID,",
				"          ActivityCodeID,",
				"          WorkStageID,",
				"          ProjectID,",
				"          DocumentDateID,",
				"          InputDateID,",
				"          BatchReference,",
				"          DocumentNumber,",
				"          LineNo,",
				"          YearNo,",
				"          Period,",
				"          SourceReference,",
				"          Description,",
				"          BaseValue,",
				"          CurrentValue,",
				"          Quantity,",
				"          QuantityUnits,",
				"          VatCode,",
				"          Resource,",
				"          Currency,",
				"          Deleted,",
				"          LastModifiedDateTime",
				"     )) ~> FactSync"
			]
		}
	}
}