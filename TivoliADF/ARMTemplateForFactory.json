{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "TivoliADF"
		},
		"Applications2_db_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Applications2_db'"
		},
		"Applications_db_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Applications_db'"
		},
		"Ftp_Cascade_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Ftp_Cascade'"
		},
		"PowerBI_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'PowerBI'"
		},
		"Reception_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Reception'"
		},
		"TiviliDW_db_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'TiviliDW_db'"
		},
		"TivoliAPI_db_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'TivoliAPI_db'"
		},
		"TivoliBlob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'TivoliBlob'"
		},
		"TivoliSSISLinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'TivoliSSISLinkedService'"
		},
		"Ftp_Cascade_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "www.tivoliservices.com"
		},
		"Ftp_Cascade_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "HRPayroll"
		},
		"TivoliKeys_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://TivoliKeys.vault.azure.net/"
		},
		"WhenFileArrives_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/5697a3d1-2163-4132-b12c-5e365b35ff40/resourceGroups/TivoliData/providers/Microsoft.Storage/storageAccounts/tivoli"
		},
		"TivoliSSIS_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint": {
			"type": "string",
			"defaultValue": "tivoli.database.windows.net"
		},
		"TivoliSSIS_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName": {
			"type": "string",
			"defaultValue": "TivoliAdmin"
		},
		"TivoliSSIS_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword": {
			"type": "secureString"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyData_SQL_To_CSV_UsingSQLLookup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select distinct subregion from sites.sites where subregion is not null",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_Applications",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select * from sites.sites where subregion = ''',variables('QueryItem'),'''')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SQL_Applications",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "CSV_Blob_TivoliExcel",
											"type": "DatasetReference",
											"parameters": {
												"Filename": {
													"value": "@concat(variables('QueryItem'),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "QueryItem",
										"value": {
											"value": "@item().subregion",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"QueryItem": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Template"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-28T12:13:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Applications')]",
				"[concat(variables('factoryId'), '/datasets/CSV_Blob_TivoliExcel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyOAProjCodesCmbtoReception')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [POSystem].[OACombinedProjectCodesFromOA]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Reception_OA_ProjectCodesCombined",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Applications_POSystem_OAProjectCodesCombined_FromOA",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-02-07T13:16:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Reception_OA_ProjectCodesCombined')]",
				"[concat(variables('factoryId'), '/datasets/Applications_POSystem_OAProjectCodesCombined_FromOA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Create_Applications_ActiveEmployeesByManager')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[USP_ActiveEmployeesByManager]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table onboarding.activeemployeesbymanager",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_Reception",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQL_Applications_ActiveEmployeesByManager",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Employee Data"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-01T07:39:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Reception')]",
				"[concat(variables('factoryId'), '/datasets/SQL_Applications_ActiveEmployeesByManager')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Error Handler')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "1) I need to set up azure functions to send emails. \n2) I will add a table to the database to manage the recipient list.\n3) I need to figure out how to capture the error message.",
				"activities": [
					{
						"name": "Send error email",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://tivolidata-la.azurewebsites.net:443/api/ADF_Email_ErrorHandler/triggers/manual/invoke?api-version=2020-05-01-preview&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=Zr6IIx6DjKI42wfKN70GXRYDhd2aB1vR-H1Albg86QQ",
							"method": "POST",
							"headers": {},
							"body": {
								"DataFactoryName": "@{pipeline().DataFactory}",
								"PipelineName": "@pipeline()?.TriggeredByPipelineName",
								"Subject": "An error has occurred!",
								"ErrorMessage": "The ADF pipeline has crashed! Please check the logs.",
								"EmailTo": "dan.denilofs@tivoliservices.com"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Utility"
				},
				"annotations": [],
				"lastPublishTime": "2022-02-28T15:42:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Export_AssetData_To_CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[USP_TOPSDatabase_Assets]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_Applications",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_Blob_TivoliTOPSDatabase",
								"type": "DatasetReference",
								"parameters": {
									"Filename": "Assets.csv"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"QueryItem": {
						"type": "String"
					}
				},
				"folder": {
					"name": "TOPS Database"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-02T10:06:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Applications')]",
				"[concat(variables('factoryId'), '/datasets/CSV_Blob_TivoliTOPSDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Export_DepotData_To_CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[USP_TOPSDatabase_Depots]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_Applications",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_Blob_TivoliTOPSDatabase",
								"type": "DatasetReference",
								"parameters": {
									"Filename": "Depots.csv"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"QueryItem": {
						"type": "String"
					}
				},
				"folder": {
					"name": "TOPS Database"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-02T10:06:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Applications')]",
				"[concat(variables('factoryId'), '/datasets/CSV_Blob_TivoliTOPSDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Export_EmployeeData_To_CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[USP_TOPSDatabase_Employee]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_Applications",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_Blob_TivoliTOPSDatabase",
								"type": "DatasetReference",
								"parameters": {
									"Filename": "Employees.csv"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"QueryItem": {
						"type": "String"
					}
				},
				"folder": {
					"name": "TOPS Database"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-14T15:05:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Applications')]",
				"[concat(variables('factoryId'), '/datasets/CSV_Blob_TivoliTOPSDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Export_OAMasterData_To_CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[USP_TOPSDatabase_OAMaster]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_Applications",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_Blob_TivoliTOPSDatabase",
								"type": "DatasetReference",
								"parameters": {
									"Filename": "OAMaster.csv"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"QueryItem": {
						"type": "String"
					}
				},
				"folder": {
					"name": "TOPS Database"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-02T10:06:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Applications')]",
				"[concat(variables('factoryId'), '/datasets/CSV_Blob_TivoliTOPSDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Export_SitesData_To_CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select distinct subregion from sites.sites where subregion is not null",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_Applications",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[USP_TOPSDatabase_Sites]",
											"storedProcedureParameters": {
												"Subregion": {
													"type": "String",
													"value": {
														"value": "@variables('QueryItem')",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SQL_Applications",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "CSV_Blob_TivoliTOPSDatabase",
											"type": "DatasetReference",
											"parameters": {
												"Filename": {
													"value": "@concat(replace(variables('QueryItem'),' ',''),'Sites.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "QueryItem",
										"value": {
											"value": "@item().subregion",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"QueryItem": {
						"type": "String"
					}
				},
				"folder": {
					"name": "TOPS Database"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-01T16:00:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Applications')]",
				"[concat(variables('factoryId'), '/datasets/CSV_Blob_TivoliTOPSDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Export_SupplierData_To_CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[USP_TOPSDatabase_Suppliers]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_Applications",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_Blob_TivoliTOPSDatabase",
								"type": "DatasetReference",
								"parameters": {
									"Filename": "Suppliers.csv"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"QueryItem": {
						"type": "String"
					}
				},
				"folder": {
					"name": "TOPS Database"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-02T11:49:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Applications')]",
				"[concat(variables('factoryId'), '/datasets/CSV_Blob_TivoliTOPSDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Finance_FactLoad_Budget')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Move data from Finance spreadsheet to Staging table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE Finance.Budget_Staging",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "WorkstageCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "FileName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "ActivityCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 5
										},
										"sink": {
											"name": "PackName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 6
										},
										"sink": {
											"name": "TabName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 8
										},
										"sink": {
											"name": "April",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 9
										},
										"sink": {
											"name": "May",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 10
										},
										"sink": {
											"name": "June",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 11
										},
										"sink": {
											"name": "July",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 12
										},
										"sink": {
											"name": "August",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 13
										},
										"sink": {
											"name": "September",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 14
										},
										"sink": {
											"name": "October",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 15
										},
										"sink": {
											"name": "November",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 16
										},
										"sink": {
											"name": "December",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 17
										},
										"sink": {
											"name": "January",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 18
										},
										"sink": {
											"name": "February",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 19
										},
										"sink": {
											"name": "March",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 20
										},
										"sink": {
											"name": "FinancialYear",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_Reception_Budget",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Reception_FactBudget_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Populate Dim and Fact Budget tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Move data from Finance spreadsheet to Staging table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[DW].[sp_FactBudget_Insert]",
							"storedProcedureParameters": {
								"BudgetName": {
									"value": "New budget",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "TiviliDW_db",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data Warehouse Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T07:20:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Excel_Reception_Budget')]",
				"[concat(variables('factoryId'), '/datasets/Reception_FactBudget_Staging')]",
				"[concat(variables('factoryId'), '/linkedServices/TiviliDW_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Import_CascadeToAZ_EmployeeData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Cascade employee data into Reception",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FtpReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"useBinaryTransfer": true,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 1
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [cascade].employee_staging",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "Employee Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "Title",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "Firstname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "Surname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 5
										},
										"sink": {
											"name": "Known As",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 6
										},
										"sink": {
											"name": "Current Position",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 7
										},
										"sink": {
											"name": "Hierarchy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 8
										},
										"sink": {
											"name": "Work Email",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 9
										},
										"sink": {
											"name": "Driver",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 10
										},
										"sink": {
											"name": "Location",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 11
										},
										"sink": {
											"name": "Cont  Service Date",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 12
										},
										"sink": {
											"name": "Start Date",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 13
										},
										"sink": {
											"name": "Date of Birth",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 14
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 15
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 16
										},
										"sink": {
											"name": "Work Phone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 17
										},
										"sink": {
											"name": "Work Mobile Phone Number",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 18
										},
										"sink": {
											"name": "Post Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 19
										},
										"sink": {
											"name": "Job Title",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 20
										},
										"sink": {
											"name": "Contract",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 21
										},
										"sink": {
											"name": "Grade",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 22
										},
										"sink": {
											"name": "Pay Frequency",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 23
										},
										"sink": {
											"name": "Project Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 24
										},
										"sink": {
											"name": "Skill Level",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 25
										},
										"sink": {
											"name": "FTE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 26
										},
										"sink": {
											"name": "Hours",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 27
										},
										"sink": {
											"name": "Basic Pay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 28
										},
										"sink": {
											"name": "Pay Basis",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 29
										},
										"sink": {
											"name": "Fixed Term Contract End Date",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 30
										},
										"sink": {
											"name": "Hourly Rate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 31
										},
										"sink": {
											"name": "Works For",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 32
										},
										"sink": {
											"name": "Left Date",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 33
										},
										"sink": {
											"name": "Last Working Day",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_Cascade_EmployeeData",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQL_Reception_Cascade_Employee_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy changes from cascade to onboarding",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Cascade employee data into Reception",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Onboarding].[USP_SyncCascadeEmployeeDataToOnboardingEmployee]"
						},
						"linkedServiceName": {
							"referenceName": "Applications2_db",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Employee Data"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-20T09:54:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CSV_Cascade_EmployeeData')]",
				"[concat(variables('factoryId'), '/datasets/SQL_Reception_Cascade_Employee_Staging')]",
				"[concat(variables('factoryId'), '/linkedServices/Applications2_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Import_ExcelBlobToAzure_Template')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "MachineType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "machinetype",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Make",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "make",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Model",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "model",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NoiseLevelDecibels",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "noiseleveldecibles",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BookMagnitude",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "bookmagnitude",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WearAndTearAllowance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "wearandtearallowance",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ActualVibrationMagnitude",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "actualvibrationmagnitude",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExposurePointminsperhour",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "exposurepointminsperhour",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TimeToReachEAV",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "timetoreacheav",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TimeToReachELV",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "timetoreachelv",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExposureDurationTWA",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "exposuredurationtwa",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExposurePointsDailySingleMachine",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "exposurepointsdailysinglemachine",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_TempSpreadsheet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQL_Applications_TempTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Template"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-19T08:43:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Excel_TempSpreadsheet')]",
				"[concat(variables('factoryId'), '/datasets/SQL_Applications_TempTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadCDSData_Applications')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sp_ClearCDSData",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[POSystem].[sp_ClearCDSData]"
						},
						"linkedServiceName": {
							"referenceName": "Applications_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "suppliers",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp_ClearCDSData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SupplierEmail",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SupplierEmail",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SupplierName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SupplierName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SupplierPostcode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SupplierPostcode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SupplierCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SupplierCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Address1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Phone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "cds_suppliers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "posystem_suppliers",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "regional_directors",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp_ClearCDSData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "RegionalDirectorCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RegionalDirectorCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RegionalDirectorEmail",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RegionalDirectorEmail",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RegionalDirectorName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RegionalDirectorName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RegionalDirectorPOLimit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RegionalDirectorPOLimit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 28
										}
									},
									{
										"source": {
											"name": "RegionalDirectorQuoteLimit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RegionalDirectorQuoteLimit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 28
										}
									},
									{
										"source": {
											"name": "RDCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RDCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RegionalDirectorRegion",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RegionalDirectorRegion",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "cds_regional_directors",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "posystem_regional_directors",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "project_codes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp_ClearCDSData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProjectCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProjectCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProjectName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProjectName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ClientCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ClientCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ClientName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ClientName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ManagerCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ManagerCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ManagerName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ManagerName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "cds_project_codes",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "posystem_project_codes",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "workstages",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp_ClearCDSData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Workstage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Workstage",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WorkstageDescription",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WorkstageDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "cds_workstages",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "posystem_workstages",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "regional_managers",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp_ClearCDSData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "RegionalManagerCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RegionalManagerCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RegionalManagerEmail",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RegionalManagerEmail",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RegionalManagerName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RegionalManagerName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RegionalDirectorCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RegionalDirectorCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RegionalDirectorRegion",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RegionalDirectorRegion",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "cds_regional_managers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "posystem_regional_managers",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "managers",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp_ClearCDSData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AreaCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AreaCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ManagerEmail",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ManagerEmail",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ManagerName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ManagerName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ManagerQuoteLimit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ManagerQuoteLimit",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ManagerRegion",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ManagerRegion",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RMCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RMCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TOPsID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TOPsID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "cds_managers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "posystem_managers",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "activity_codes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp_ClearCDSData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ActivityCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ActivityCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ActivityName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ActivityName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ActivityCategory",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ActivityCategory",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ActivityType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ActivityType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "cds_activity_codes",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "posystem_activity_codes",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-02T11:49:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Applications_db')]",
				"[concat(variables('factoryId'), '/datasets/cds_suppliers')]",
				"[concat(variables('factoryId'), '/datasets/posystem_suppliers')]",
				"[concat(variables('factoryId'), '/datasets/cds_regional_directors')]",
				"[concat(variables('factoryId'), '/datasets/posystem_regional_directors')]",
				"[concat(variables('factoryId'), '/datasets/cds_project_codes')]",
				"[concat(variables('factoryId'), '/datasets/posystem_project_codes')]",
				"[concat(variables('factoryId'), '/datasets/cds_workstages')]",
				"[concat(variables('factoryId'), '/datasets/posystem_workstages')]",
				"[concat(variables('factoryId'), '/datasets/cds_regional_managers')]",
				"[concat(variables('factoryId'), '/datasets/posystem_regional_managers')]",
				"[concat(variables('factoryId'), '/datasets/cds_managers')]",
				"[concat(variables('factoryId'), '/datasets/posystem_managers')]",
				"[concat(variables('factoryId'), '/datasets/cds_activity_codes')]",
				"[concat(variables('factoryId'), '/datasets/posystem_activity_codes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadCDSData_Reception')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sp_ClearCDSData",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[POSystem].[sp_ClearCDSData]"
						},
						"linkedServiceName": {
							"referenceName": "Reception",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "project_codes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp_ClearCDSData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProjectCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProjectCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProjectName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProjectName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ClientCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ClientCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ClientName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ClientName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ManagerCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ManagerCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ManagerName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ManagerName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "cds_project_codes",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Reception_POSystem_ProjectCodes",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "activity_codes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp_ClearCDSData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ActivityCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ActivityCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ActivityName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ActivityName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ActivityCategory",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ActivityCategory",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ActivityType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ActivityType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "cds_activity_codes",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Reception_POSystem_ActivityCodes",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-02-18T11:10:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Reception')]",
				"[concat(variables('factoryId'), '/datasets/cds_project_codes')]",
				"[concat(variables('factoryId'), '/datasets/Reception_POSystem_ProjectCodes')]",
				"[concat(variables('factoryId'), '/datasets/cds_activity_codes')]",
				"[concat(variables('factoryId'), '/datasets/Reception_POSystem_ActivityCodes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadFAandEmpData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "StageEmployees",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp_ClearEmployees_Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "payroll",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "payroll",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "tops",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "tops",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "forename",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "forename",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "surname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "surname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lowercase",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "lowercase",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "know as",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KnownAs",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "job",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "job",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "email",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "email",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "work_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "work_type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "base",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "base",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "pcode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "p_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "p_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "c_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "c_type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "teaml",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "teaml",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "super",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "super",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "manager",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "manager",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "am_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "am_code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "region",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Region",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "topsac",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "tops_ac",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "operations",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Operations",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "leave",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Leave",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "start",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StartDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "leave_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LeaveDate",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "employee_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Reception_Employyees_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sp_ClearEmployees_Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ClearEmployees_Staging]"
						},
						"linkedServiceName": {
							"referenceName": "Reception",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Merge Employee Data",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "StageEmployees",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[TIVOLI].[sp_EmployeeDataRefresh]"
						},
						"linkedServiceName": {
							"referenceName": "Reception",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-04-28T09:27:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/employee_data')]",
				"[concat(variables('factoryId'), '/datasets/Reception_Employyees_Staging')]",
				"[concat(variables('factoryId'), '/linkedServices/Reception')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadSWData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sw_contract_rates_staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp_CleanupSW_Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sw_ref",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sw_ref",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "site",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "site",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "task",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "task",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "value",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "sw_contract_rates_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sw_contract_rates_staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sp_CleanupSW_Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Tivoli].[sp_CleanUpSW_Staging]"
						},
						"linkedServiceName": {
							"referenceName": "TivoliAPI_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Merge Contract Rates",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "sw_contract_rates_staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Tivoli].[sp_Get_SW_Contract_Rates]"
						},
						"linkedServiceName": {
							"referenceName": "TivoliAPI_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sw_finaance_codes_staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp_CleanupSW_Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sw_ref",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sw_ref",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "site",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "site",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "dept_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "dept_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "dept_desc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "dept_desc",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sw_region",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sw_region",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sw_team",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sw_team",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sw_manager",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sw_manager",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "site_phone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "site_phone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "function",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "function",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "sw_finance_codes_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sw_finance_codes",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Merge Finance Codes",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "sw_finaance_codes_staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Tivoli].[sp_Get_SW_Finance_Codes]"
						},
						"linkedServiceName": {
							"referenceName": "TivoliAPI_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sw_site_data_staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp_CleanupSW_Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sw_ref",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sw_ref",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "site",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "site",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "team",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "team",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "week",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "week",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "pcode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "map",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "map",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "location",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "location",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "town",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "town",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "address",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "address",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "postcode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "postcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "site_address",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "site_address",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "grid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "grid",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "latitude",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "longitude",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "dept_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "dept_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "dept_desc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "dept_desc",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sw_region",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sw_region",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sw_team",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sw_team",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "site_contact",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "site_contact",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "site_phone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "site_phone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "function",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "function",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "grass_m",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "grass_m",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "gras_freq",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "gras_freq",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "hard_m",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "hard_m",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "hard_freq",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "hard_freq",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "rough_m",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "rough_m",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "rough_freq",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "rough_freq",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "invasive_m",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "invasive_m",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "invasive_freq",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "invasive_freq",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "hedge_m",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "hedge_m",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "hedge_freq",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "hedge_freq",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "shrub_m",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "shrub_m",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "shrub_freq",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "shrub_freq",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "risk",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "risk",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "access",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "access",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "comments",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "comments",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "r_manager",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "r_manager",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "a_manager",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "a_manager",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "tops_user",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "tops_user",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "tos_account",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "tos_account",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "sw_site_data_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sw_site_data_stagng",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Merge Site Data",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "sw_site_data_staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Tivoli].[sp_Get_SW_Site_Data]"
						},
						"linkedServiceName": {
							"referenceName": "TivoliAPI_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sw_work_elements",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp_CleanupSW_Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "task_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "task_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "task",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "task",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "sw_work_elements_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sw_work_elements_staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Merge Work Elements",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "sw_work_elements",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Tivoli].[sp_Get_SW_Work_Elements]"
						},
						"linkedServiceName": {
							"referenceName": "TivoliAPI_db",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-12-01T11:00:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sw_contract_rates_csv')]",
				"[concat(variables('factoryId'), '/datasets/sw_contract_rates_staging')]",
				"[concat(variables('factoryId'), '/linkedServices/TivoliAPI_db')]",
				"[concat(variables('factoryId'), '/datasets/sw_finance_codes_csv')]",
				"[concat(variables('factoryId'), '/datasets/sw_finance_codes')]",
				"[concat(variables('factoryId'), '/datasets/sw_site_data_csv')]",
				"[concat(variables('factoryId'), '/datasets/sw_site_data_stagng')]",
				"[concat(variables('factoryId'), '/datasets/sw_work_elements_csv')]",
				"[concat(variables('factoryId'), '/datasets/sw_work_elements_staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OA_DimLoad_PL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DimActivityCode",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[DW].[sp_DimActivityCode_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "TiviliDW_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DimCostCentre",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[DW].[sp_DimCostCentre_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "TiviliDW_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DimCustomer",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[DW].[sp_DimCustomer_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "TiviliDW_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DimProject",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DimCostCentre",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DimCustomer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[DW].[sp_DimProject_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "TiviliDW_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DimSupplier",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[DW].[sp_DimSupplier_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "TiviliDW_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DimWorkStage",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[DW].[sp_DimWorkStage_Merge]"
						},
						"linkedServiceName": {
							"referenceName": "TiviliDW_db",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data Warehouse Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T10:30:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TiviliDW_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OA_FactLoad_PL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "GL Data from Open Accounts",
				"activities": [
					{
						"name": "LastRunDate_GL",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Dim Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT CAST(ISNULL([LastRunDateTime], '1900-01-01') AS date) AS LastRunDateTime FROM [System].[Config]  WHERE setting = 'oa_nltrans'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TivoliDW_db",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Load OA Fact GL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Set _LastDateTime_GL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "oa_fact_GeneralLedger_df",
								"type": "DataFlowReference",
								"parameters": {
									"LastRunDate": {
										"value": "'@{variables('_LastRunDateTime_GL')}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"nltrans": {},
									"CostCentre": {},
									"DocumentType": {},
									"TransactionType": {},
									"ActivityCode": {},
									"Customer": {},
									"Supplier": {},
									"FactSync": {}
								},
								"linkedServiceParameters": {}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Set _LastDateTime_GL",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LastRunDate_GL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "_LastRunDateTime_GL",
							"value": {
								"value": "@formatDateTime(activity('LastRunDate_GL').output.FirstRow.LastRunDateTime, 'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "CurrentDate",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "_CurrentDate",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "UpdateLastRunDate_GL",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Load OA Fact GL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[System].[sp_UpdateLastRunDateTime]",
							"storedProcedureParameters": {
								"LastRunDate": {
									"value": {
										"value": "@formatDateTime(string(variables('_CurrentDate')), 'yyyy-MM-dd')",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Setting": {
									"value": "oa_nltrans",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "TiviliDW_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Dim Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CurrentDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "OA_DimLoad_PL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load OA Fact PT",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Set _LastDateTime_PT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "oa_fact_ProjectTransactions_df",
								"type": "DataFlowReference",
								"parameters": {
									"LastRunDate": {
										"value": "'@{variables('_LastRunDateTime_PT')}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"pctrans": {},
									"CostCentre": {},
									"DocumentType": {},
									"TransactionType": {},
									"ActivityCode": {},
									"WorkStage": {},
									"Project": {},
									"FactSync": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "UpdateLastRunDate_PT",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Load OA Fact PT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[System].[sp_UpdateLastRunDateTime]",
							"storedProcedureParameters": {
								"LastRunDate": {
									"value": {
										"value": "@formatDateTime(string(variables('_CurrentDate')), 'yyyy-MM-dd')",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Setting": {
									"value": "oa_pctrans",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "TiviliDW_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LastRunDate_PT",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Dim Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT CAST(ISNULL([LastRunDateTime], '1900-01-01') AS date) AS LastRunDateTime FROM [System].[Config]  WHERE setting = 'oa_pctrans'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TivoliDW_db",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set _LastDateTime_PT",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LastRunDate_PT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "_LastRunDateTime_PT",
							"value": {
								"value": "@formatDateTime(activity('LastRunDate_PT').output.FirstRow.LastRunDateTime, 'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "LastRunDate_PO",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Dim Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT CAST(ISNULL([LastRunDateTime], '1900-01-01') AS date) AS LastRunDateTime FROM [System].[Config]  WHERE setting = 'oa_podetail'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TivoliDW_db",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set _LastDateTime_PO",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LastRunDate_PO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "_LastRunDateTime_PO",
							"value": {
								"value": "@formatDateTime(activity('LastRunDate_PO').output.FirstRow.LastRunDateTime, 'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Load OA Fact PO",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Set _LastDateTime_PO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "oa_fact_PurchaseOrder_df",
								"type": "DataFlowReference",
								"parameters": {
									"LastRunDate": {
										"value": "'@{variables('_LastRunDateTime_PO')}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"podetail": {},
									"Supplier": {},
									"ActivityCode": {},
									"WorkStage": {},
									"Project": {},
									"FactSync": {}
								},
								"linkedServiceParameters": {}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "UpdateLastRunDate_PO",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Load OA Fact PO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[System].[sp_UpdateLastRunDateTime]",
							"storedProcedureParameters": {
								"LastRunDate": {
									"value": {
										"value": "@formatDateTime(string(variables('_CurrentDate')), 'yyyy-MM-dd')",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Setting": {
									"value": "oa_podetail",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "TiviliDW_db",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"_LastRunDateTime_GL": {
						"type": "String"
					},
					"_CurrentDate": {
						"type": "String"
					},
					"_LastRunDateTime_PT": {
						"type": "String"
					},
					"_LastRunDateTime_PO": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Data Warehouse Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T10:30:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TivoliDW_db')]",
				"[concat(variables('factoryId'), '/dataflows/oa_fact_GeneralLedger_df')]",
				"[concat(variables('factoryId'), '/linkedServices/TiviliDW_db')]",
				"[concat(variables('factoryId'), '/pipelines/OA_DimLoad_PL')]",
				"[concat(variables('factoryId'), '/dataflows/oa_fact_ProjectTransactions_df')]",
				"[concat(variables('factoryId'), '/dataflows/oa_fact_PurchaseOrder_df')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline_TOPSDatabase')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Site data",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Export_SitesData_To_CSV",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send error email",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Site data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Error Handler",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Depot data",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Export_DepotData_To_CSV",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "OA Master data",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Export_OAMasterData_To_CSV",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Asset data",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Export_AssetData_To_CSV",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Employee data",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Export_EmployeeData_To_CSV",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send error email_copy1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "OA Master data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Error Handler",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send error email_copy2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Employee data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Error Handler",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send error email_copy3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Depot data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Error Handler",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send error email_copy5",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Asset data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Error Handler",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Suppliers data",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Export_SupplierData_To_CSV",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send error email_copy2_copy1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Suppliers data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Error Handler",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "TOPS Database"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-02T14:37:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Export_SitesData_To_CSV')]",
				"[concat(variables('factoryId'), '/pipelines/Error Handler')]",
				"[concat(variables('factoryId'), '/pipelines/Export_DepotData_To_CSV')]",
				"[concat(variables('factoryId'), '/pipelines/Export_OAMasterData_To_CSV')]",
				"[concat(variables('factoryId'), '/pipelines/Export_AssetData_To_CSV')]",
				"[concat(variables('factoryId'), '/pipelines/Export_EmployeeData_To_CSV')]",
				"[concat(variables('factoryId'), '/pipelines/Export_SupplierData_To_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProccessAOMData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetRunningStatus",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [Status] FROM [RDF].[tbl_PipelineRuns]  WHERE PipelineName = 'ProcessAOMData'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "tbl_PipelineRuns",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Check Run Status",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetRunningStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity(\n'GetRunningStatus').output.firstRow.Status, 'Complete'\n)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait_false",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "sp_AddTemplateFields",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "StartingPipeline",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[AOM].[sp_AddTemplateFields]"
									},
									"linkedServiceName": {
										"referenceName": "TivoliAPI_db",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "sp_ProcessValues",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "sp_AddTemplateFields",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[AOM].[sp_ProcessValues]"
									},
									"linkedServiceName": {
										"referenceName": "TivoliAPI_db",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "StartingPipeline",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[RDF].[sp_PipelineStatus]",
										"storedProcedureParameters": {
											"PipelineName": {
												"value": "ProcessAOMData",
												"type": "String"
											},
											"Status": {
												"value": "Running",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "TivoliAPI_db",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "EndingPipeline",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "sp_ProcessValues",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[RDF].[sp_PipelineStatus]",
										"storedProcedureParameters": {
											"PipelineName": {
												"value": "ProcessAOMData",
												"type": "String"
											},
											"Status": {
												"value": "Complete",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "TivoliAPI_db",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-12-01T09:11:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tbl_PipelineRuns')]",
				"[concat(variables('factoryId'), '/linkedServices/TivoliAPI_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QEW Projects')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Reseet Prjs",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProjectCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProjectCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Customer",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Customer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CustomerCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CustomerCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ManagerName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ManagerName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ManagerCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ManagerCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ManagerEmail",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ManagerEmail",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SiteAddress",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SiteAddress",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ManagerQuoteLimit",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ApprovalLimit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "qew_projects",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "projects_staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Reseet Prjs",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Tivoli].[sp_Clear_EW_Projects_Staging]"
						},
						"linkedServiceName": {
							"referenceName": "PowerBI",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Reseet Suplliers",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Tivoli].[sp_Clear_Suppliers_staging]"
						},
						"linkedServiceName": {
							"referenceName": "PowerBI",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Reseet Suplliers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SupplierEmail",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SupplierEmail",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SupplierName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SupplierName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SupplierPostcode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SupplierPostcode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SupplierCode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SupplierCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Address1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Address1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Phone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "posys_suppliers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "suppliers_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Process Suppliers",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Tivoli].[sp_Update_Suppliers]"
						},
						"linkedServiceName": {
							"referenceName": "PowerBI",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Process Prjs",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Tivoli].[sp_tbl_EW_Projects]"
						},
						"linkedServiceName": {
							"referenceName": "PowerBI",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-14T16:12:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/qew_projects')]",
				"[concat(variables('factoryId'), '/datasets/projects_staging')]",
				"[concat(variables('factoryId'), '/linkedServices/PowerBI')]",
				"[concat(variables('factoryId'), '/datasets/posys_suppliers')]",
				"[concat(variables('factoryId'), '/datasets/suppliers_Staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SW_DataRefresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ContractRates",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table sw.sw_contract_rates",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sw_ref",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sw_ref",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "site",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "site",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "task",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "task",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "value",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 12
										}
									},
									{
										"source": {
											"name": "DateAdded",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DateAdded",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "DateModified",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DateModified",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_SW_ContractRates",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQL_Applications_SW_Contract_Rates",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SiteData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table sw.sw_site_data",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Site_ref",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sw_ref",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "site",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "site",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "team",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "team",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "week",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "week",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "pcode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pcode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "map",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "map",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "location",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "location",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "town",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "town",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "address",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "address",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "postcode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "postcode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "site_address",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "site_address",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "grid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "grid",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "latitude",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "latitude",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "longitude",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "longitude",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "dept_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "dept_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "dept_desc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "dept_desc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Site_Phone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "site_phone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "function",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "function",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "grass_m",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "grass_m",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "gras_freq",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "gras_freq",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "hard_m",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "hard_m",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "hard_freq",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "hard_freq",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "rough_m",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "rough_m",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "rough_freq",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "rough_freq",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "invasive_m",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "invasive_m",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "invasive_freq",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "invasive_freq",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "hedge_m",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "hedge_m",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "hedge_freq",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "hedge_freq",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "shrub_m",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "shrub_m",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "shrub_freq",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "shrub_freq",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "risk",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "risk",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "access",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "access",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "comments",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "comments",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "r_manager",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "r_manager",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "a_manager",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "a_manager",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tops_user",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "tops_user",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "tos_account",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "tos_account",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DateAdded",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DateAdded",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "DateModified",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DateModified",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Dep level 3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Dep Level 3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Dep level 2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Dep Level 2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Dep level 1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Dep Level 1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SW_Manager",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SW_Manager",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Contact",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contact",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SW_Site_Contact",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SW_Site_Contact",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LitterLeaf_Freq",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LitterLeaf_Freq",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LitterLeaf_m",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LitterLeaf_m",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Trees_Freq",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trees_Freq",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Trees_m",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trees_m",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Gullies_Freq",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Gullies_Freq",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Gullies_m",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Gullies_m",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Planters_Freq",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Planters_Freq",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Planters_m",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Planters_m",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "SiteVisit_Freq",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SiteVisit_Freq",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SiteVisit_m",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SiteVisit_m",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_SW_SiteData",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQL_Applications_SW_Site_Data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "FinanceCodes",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table sw.sw_finance_codes",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sw_ref",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sw_ref",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "site",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "site",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "function",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "function",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DateAdded",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DateAdded",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "DateModified",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DateModified",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Dep Level 3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Dep Level 3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Dep Level 2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Dep Level 2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Dep Level 1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Dep Level 1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_SW_FinanceCodes",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQL_Applications_SW_Finance_Codes",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SW"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-01T10:47:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Excel_SW_ContractRates')]",
				"[concat(variables('factoryId'), '/datasets/SQL_Applications_SW_Contract_Rates')]",
				"[concat(variables('factoryId'), '/datasets/Excel_SW_SiteData')]",
				"[concat(variables('factoryId'), '/datasets/SQL_Applications_SW_Site_Data')]",
				"[concat(variables('factoryId'), '/datasets/Excel_SW_FinanceCodes')]",
				"[concat(variables('factoryId'), '/datasets/SQL_Applications_SW_Finance_Codes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SyncReceptionApplicationEmployeedata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from tivoli.employees",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_Reception",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQL_Applications_tmpEmployee",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Onboarding].[USP_SyncReceptionApplicationEmployeeData]"
						},
						"linkedServiceName": {
							"referenceName": "Applications2_db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Send failure email 2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Error Handler",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send Failure Email",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Error Handler",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Employee Data"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-22T14:03:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Reception')]",
				"[concat(variables('factoryId'), '/datasets/SQL_Applications_tmpEmployee')]",
				"[concat(variables('factoryId'), '/linkedServices/Applications2_db')]",
				"[concat(variables('factoryId'), '/pipelines/Error Handler')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Applications_POSystem_OAProjectCodesCombined_FromOA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Applications2_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProjCodesCombID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProjectCode",
						"type": "nvarchar"
					},
					{
						"name": "ProjectName",
						"type": "nvarchar"
					},
					{
						"name": "ProjectShortName",
						"type": "nvarchar"
					},
					{
						"name": "ProjectCustomerNumber",
						"type": "nvarchar"
					},
					{
						"name": "CustomerName",
						"type": "nvarchar"
					},
					{
						"name": "workstage",
						"type": "nvarchar"
					},
					{
						"name": "WorkstageName",
						"type": "nvarchar"
					},
					{
						"name": "ActivityCode",
						"type": "nvarchar"
					},
					{
						"name": "ActivityCodeName",
						"type": "nvarchar"
					},
					{
						"name": "ActivityCategory",
						"type": "nvarchar"
					},
					{
						"name": "ActivityType",
						"type": "nvarchar"
					},
					{
						"name": "UseInPOSystem",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "POSystem",
					"table": "OACombinedProjectCodesFromOA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Applications2_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_Blob_TivoliExcel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TivoliBlob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Filename": {
						"type": "string",
						"defaultValue": "Filename"
					}
				},
				"folder": {
					"name": "CSVs"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().Filename",
							"type": "Expression"
						},
						"container": "tivoli-excel"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TivoliBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_Blob_TivoliTOPSDatabase')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TivoliBlob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Filename": {
						"type": "string",
						"defaultValue": "Filename"
					}
				},
				"folder": {
					"name": "CSVs"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().Filename",
							"type": "Expression"
						},
						"container": "tivoli-topsdatabase"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TivoliBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_Cascade_EmployeeData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ftp_Cascade",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CSVs"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation",
						"fileName": "CascadeEmployees.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ftp_Cascade')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excel_Reception_Budget')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TivoliBlob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Excel"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Budget & FC - Upload - Activity Code.xlsx",
						"container": "tivoli-excel"
					},
					"range": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TivoliBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excel_SW_ContractRates')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TivoliBlob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Excel"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Contract Rates",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Amended SW Data Tables 2022.xlsx",
						"container": "tivoli-excel"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "sw_ref",
						"type": "String"
					},
					{
						"name": "site",
						"type": "String"
					},
					{
						"name": "task",
						"type": "String"
					},
					{
						"name": "value",
						"type": "String"
					},
					{
						"name": "DateAdded",
						"type": "String"
					},
					{
						"name": "DateModified",
						"type": "String"
					},
					{
						"name": "DateDeleted",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TivoliBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excel_SW_FinanceCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TivoliBlob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Excel"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Finance Codes",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Amended SW Data Tables 2022.xlsx",
						"container": "tivoli-excel"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "sw_ref",
						"type": "String"
					},
					{
						"name": "site",
						"type": "String"
					},
					{
						"name": "Dep Level 3",
						"type": "String"
					},
					{
						"name": "Dep Level 2",
						"type": "String"
					},
					{
						"name": "Dep Level 1",
						"type": "String"
					},
					{
						"name": "function",
						"type": "String"
					},
					{
						"name": "DateAdded",
						"type": "String"
					},
					{
						"name": "DateModified",
						"type": "String"
					},
					{
						"name": "DateDeleted",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TivoliBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excel_SW_SiteData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TivoliBlob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Excel"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Site Data",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Amended SW Data Tables 2022.xlsx",
						"container": "tivoli-excel"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "Site_ref",
						"type": "String"
					},
					{
						"name": "site",
						"type": "String"
					},
					{
						"name": "team",
						"type": "String"
					},
					{
						"name": "week",
						"type": "String"
					},
					{
						"name": "pcode",
						"type": "String"
					},
					{
						"name": "map",
						"type": "String"
					},
					{
						"name": "location",
						"type": "String"
					},
					{
						"name": "town",
						"type": "String"
					},
					{
						"name": "address",
						"type": "String"
					},
					{
						"name": "postcode",
						"type": "String"
					},
					{
						"name": "site_address",
						"type": "String"
					},
					{
						"name": "grid",
						"type": "String"
					},
					{
						"name": "latitude",
						"type": "String"
					},
					{
						"name": "longitude",
						"type": "String"
					},
					{
						"name": "dept_id",
						"type": "String"
					},
					{
						"name": "dept_desc",
						"type": "String"
					},
					{
						"name": "Dep level 3",
						"type": "String"
					},
					{
						"name": "Dep level 2",
						"type": "String"
					},
					{
						"name": "Dep level 1",
						"type": "String"
					},
					{
						"name": "SW_Manager",
						"type": "String"
					},
					{
						"name": "Contact",
						"type": "String"
					},
					{
						"name": "SW_Site_Contact",
						"type": "String"
					},
					{
						"name": "Site_Phone",
						"type": "String"
					},
					{
						"name": "function",
						"type": "String"
					},
					{
						"name": "grass_m",
						"type": "String"
					},
					{
						"name": "gras_freq",
						"type": "String"
					},
					{
						"name": "rough_m",
						"type": "String"
					},
					{
						"name": "rough_freq",
						"type": "String"
					},
					{
						"name": "shrub_m",
						"type": "String"
					},
					{
						"name": "shrub_freq",
						"type": "String"
					},
					{
						"name": "hedge_m",
						"type": "String"
					},
					{
						"name": "hedge_freq",
						"type": "String"
					},
					{
						"name": "hard_m",
						"type": "String"
					},
					{
						"name": "hard_freq",
						"type": "String"
					},
					{
						"name": "LitterLeaf_Freq",
						"type": "String"
					},
					{
						"name": "LitterLeaf_m",
						"type": "String"
					},
					{
						"name": "invasive_m",
						"type": "String"
					},
					{
						"name": "invasive_freq",
						"type": "String"
					},
					{
						"name": "Trees_Freq",
						"type": "String"
					},
					{
						"name": "Trees_m",
						"type": "String"
					},
					{
						"name": "Gullies_Freq",
						"type": "String"
					},
					{
						"name": "Gullies_m",
						"type": "String"
					},
					{
						"name": "Planters_Freq",
						"type": "String"
					},
					{
						"name": "Planters_m",
						"type": "String"
					},
					{
						"name": "SiteVisit_Freq",
						"type": "String"
					},
					{
						"name": "SiteVisit_m",
						"type": "String"
					},
					{
						"name": "risk",
						"type": "String"
					},
					{
						"name": "access",
						"type": "String"
					},
					{
						"name": "comments",
						"type": "String"
					},
					{
						"name": "r_manager",
						"type": "String"
					},
					{
						"name": "a_manager",
						"type": "String"
					},
					{
						"name": "tops_user",
						"type": "String"
					},
					{
						"name": "tos_account",
						"type": "String"
					},
					{
						"name": "DateAdded",
						"type": "String"
					},
					{
						"name": "DateModified",
						"type": "String"
					},
					{
						"name": "DateDeleted",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TivoliBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excel_TempSpreadsheet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TivoliBlob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Excel"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet2",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Book1.xlsx",
						"container": "tivoli-excel"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "MachineType",
						"type": "String"
					},
					{
						"name": "Make",
						"type": "String"
					},
					{
						"name": "Model",
						"type": "String"
					},
					{
						"name": "NoiseLevelDecibels",
						"type": "String"
					},
					{
						"name": "BookMagnitude",
						"type": "String"
					},
					{
						"name": "WearAndTearAllowance",
						"type": "String"
					},
					{
						"name": "ActualVibrationMagnitude",
						"type": "String"
					},
					{
						"name": "ExposurePointminsperhour",
						"type": "String"
					},
					{
						"name": "TimeToReachEAV",
						"type": "String"
					},
					{
						"name": "TimeToReachELV",
						"type": "String"
					},
					{
						"name": "ExposureDurationTWA",
						"type": "String"
					},
					{
						"name": "ExposurePointsDailySingleMachine",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TivoliBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactGL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TiviliDW_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "unqkey",
						"type": "nvarchar"
					},
					{
						"name": "BatchReference",
						"type": "nvarchar"
					},
					{
						"name": "DocumentNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LineNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CostCentreID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DocumentTypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TransactionTypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ActivityCodeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TransactionDateID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DocumentDateID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InputDateID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InputTimeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SupplierID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "YearNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Period",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SourceReference",
						"type": "nvarchar"
					},
					{
						"name": "OrderReference",
						"type": "nvarchar"
					},
					{
						"name": "OriginReference",
						"type": "nvarchar"
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "BaseValue",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "CurrentValue",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Quantity",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "QuantityUnits",
						"type": "nvarchar"
					},
					{
						"name": "VatCode",
						"type": "nvarchar"
					},
					{
						"name": "LastModifiedDateTime",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "DW",
					"table": "FactGeneralLedger"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TiviliDW_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactPO')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TiviliDW_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ActivityCodeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SupplierID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProjectID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WorkstageID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderDateID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RevDateID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreatedDateID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreatedTimeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DueDateID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EndDateID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MatchDateID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AmendmentDateID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderReference",
						"type": "nvarchar"
					},
					{
						"name": "OrderValue",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "OrderStatus",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryPostCode",
						"type": "nvarchar"
					},
					{
						"name": "Branch",
						"type": "nvarchar"
					},
					{
						"name": "RecordType",
						"type": "nvarchar"
					},
					{
						"name": "OutstandingValue",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "CustomerReference",
						"type": "nvarchar"
					},
					{
						"name": "CurrencyCode",
						"type": "nvarchar"
					},
					{
						"name": "CurrencyRate",
						"type": "decimal",
						"precision": 21,
						"scale": 6
					},
					{
						"name": "OrderBaseValue",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "OrderBaseOutstanding",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Period",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Year",
						"type": "nvarchar"
					},
					{
						"name": "RequestedBy",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryAddress",
						"type": "nvarchar"
					},
					{
						"name": "InvoiceAddress",
						"type": "nvarchar"
					},
					{
						"name": "OrderAddress",
						"type": "nvarchar"
					},
					{
						"name": "OrderPostCode",
						"type": "nvarchar"
					},
					{
						"name": "LineNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LineTotal",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 17,
						"scale": 5
					},
					{
						"name": "Discount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Quantity",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "OutStandingTotal",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "ItemDescription",
						"type": "nvarchar"
					},
					{
						"name": "Units",
						"type": "nvarchar"
					},
					{
						"name": "VatCode",
						"type": "nvarchar"
					},
					{
						"name": "OutstandingQty",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "LineStatus",
						"type": "nvarchar"
					},
					{
						"name": "AllocatedQty",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "DispatchedQty",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "UnderPickedQty",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "NewPrice",
						"type": "decimal",
						"precision": 17,
						"scale": 5
					},
					{
						"name": "BaseValue",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "BaseValueOutstanding",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "BasePrice",
						"type": "decimal",
						"precision": 17,
						"scale": 5
					},
					{
						"name": "LastModifiedDateTime",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "DW",
					"table": "FactPurchaseOrder"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TiviliDW_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactPT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TiviliDW_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "unqkey",
						"type": "nvarchar"
					},
					{
						"name": "CostCentreID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DocumentTypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TransactionTypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ActivityCodeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WorkStageID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProjectID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DocumentDateID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InputDateID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BatchReference",
						"type": "nvarchar"
					},
					{
						"name": "DocumentNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LineNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "YearNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Period",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SourceReference",
						"type": "nvarchar"
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "BaseValue",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "CurrentValue",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Quantity",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "QuantityUnits",
						"type": "nvarchar"
					},
					{
						"name": "VatCode",
						"type": "nvarchar"
					},
					{
						"name": "Resource",
						"type": "nvarchar"
					},
					{
						"name": "Currency",
						"type": "nvarchar"
					},
					{
						"name": "Deleted",
						"type": "bit"
					},
					{
						"name": "LastModifiedDateTime",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "DW",
					"table": "FactProjectTransaction"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TiviliDW_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FixedAssetCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TivoliBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "FixedAssets.csv",
						"container": "tivoli-excel"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Activity",
						"type": "String"
					},
					{
						"name": "Asset_Tag",
						"type": "String"
					},
					{
						"name": "Category_1",
						"type": "String"
					},
					{
						"name": "Category_2",
						"type": "String"
					},
					{
						"name": "Category_3",
						"type": "String"
					},
					{
						"name": "Comments",
						"type": "String"
					},
					{
						"name": "Condition",
						"type": "String"
					},
					{
						"name": "Current_NBV",
						"type": "String"
					},
					{
						"name": "Date_last_verified",
						"type": "String"
					},
					{
						"name": "Depn_Life",
						"type": "String"
					},
					{
						"name": "Expected_weekly_checks",
						"type": "String"
					},
					{
						"name": "Exposure",
						"type": "String"
					},
					{
						"name": "F_Index",
						"type": "String"
					},
					{
						"name": "Fuel_Type",
						"type": "String"
					},
					{
						"name": "Havs",
						"type": "String"
					},
					{
						"name": "Invoice_No",
						"type": "String"
					},
					{
						"name": "Maintenance_costs",
						"type": "String"
					},
					{
						"name": "Maintenance_date",
						"type": "String"
					},
					{
						"name": "Make",
						"type": "String"
					},
					{
						"name": "Model",
						"type": "String"
					},
					{
						"name": "Monthly_Depn",
						"type": "String"
					},
					{
						"name": "OA_Index",
						"type": "String"
					},
					{
						"name": "Opening_NBV",
						"type": "String"
					},
					{
						"name": "Original_Owner",
						"type": "String"
					},
					{
						"name": "Original_Value",
						"type": "String"
					},
					{
						"name": "PRIN",
						"type": "String"
					},
					{
						"name": "Project_Code",
						"type": "String"
					},
					{
						"name": "Purchased",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "Registration",
						"type": "String"
					},
					{
						"name": "Responsible",
						"type": "String"
					},
					{
						"name": "Serial_Number",
						"type": "String"
					},
					{
						"name": "Site",
						"type": "String"
					},
					{
						"name": "TOPsCategory",
						"type": "String"
					},
					{
						"name": "UR_DW",
						"type": "String"
					},
					{
						"name": "Upload",
						"type": "String"
					},
					{
						"name": "V5_Recorded",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TivoliBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Reception_Employyees_Staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Reception",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "payroll",
						"type": "varchar"
					},
					{
						"name": "tops",
						"type": "varchar"
					},
					{
						"name": "forename",
						"type": "varchar"
					},
					{
						"name": "surname",
						"type": "varchar"
					},
					{
						"name": "lowercase",
						"type": "varchar"
					},
					{
						"name": "KnownAs",
						"type": "nvarchar"
					},
					{
						"name": "job",
						"type": "varchar"
					},
					{
						"name": "email",
						"type": "varchar"
					},
					{
						"name": "work_type",
						"type": "varchar"
					},
					{
						"name": "base",
						"type": "varchar"
					},
					{
						"name": "pcode",
						"type": "varchar"
					},
					{
						"name": "p_name",
						"type": "varchar"
					},
					{
						"name": "c_type",
						"type": "varchar"
					},
					{
						"name": "teaml",
						"type": "varchar"
					},
					{
						"name": "super",
						"type": "varchar"
					},
					{
						"name": "manager",
						"type": "varchar"
					},
					{
						"name": "am_code",
						"type": "varchar"
					},
					{
						"name": "Region",
						"type": "varchar"
					},
					{
						"name": "tops_ac",
						"type": "varchar"
					},
					{
						"name": "ChangeStatus",
						"type": "varchar"
					},
					{
						"name": "Operations",
						"type": "varchar"
					},
					{
						"name": "Leave",
						"type": "varchar"
					},
					{
						"name": "StartDate",
						"type": "varchar"
					},
					{
						"name": "LeaveDate",
						"type": "varchar"
					},
					{
						"name": "SupervisorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TeamLeaderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ManagerID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "Tivoli",
					"table": "Employees_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Reception')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Reception_FactBudget_Staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Reception",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WorkstageCode",
						"type": "nvarchar"
					},
					{
						"name": "FileName",
						"type": "nvarchar"
					},
					{
						"name": "ActivityCode",
						"type": "nvarchar"
					},
					{
						"name": "PackName",
						"type": "nvarchar"
					},
					{
						"name": "TabName",
						"type": "nvarchar"
					},
					{
						"name": "April",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "May",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "June",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "July",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "August",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "September",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "October",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "November",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "December",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "January",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "February",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "March",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "FinancialYear",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "Finance",
					"table": "Budget_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Reception')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Reception_FixedAssets_staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Reception",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "F_Index",
						"type": "nvarchar"
					},
					{
						"name": "OA_Index",
						"type": "nvarchar"
					},
					{
						"name": "Original_Owner",
						"type": "nvarchar"
					},
					{
						"name": "Asset_Tag",
						"type": "nvarchar"
					},
					{
						"name": "Project_Code",
						"type": "nvarchar"
					},
					{
						"name": "Responsible",
						"type": "nvarchar"
					},
					{
						"name": "PRIN",
						"type": "nvarchar"
					},
					{
						"name": "Invoice_No",
						"type": "nvarchar"
					},
					{
						"name": "Activity",
						"type": "nvarchar"
					},
					{
						"name": "Purchased",
						"type": "nvarchar"
					},
					{
						"name": "Depn_Life",
						"type": "nvarchar"
					},
					{
						"name": "Original_Value",
						"type": "nvarchar"
					},
					{
						"name": "Opening_NBV",
						"type": "nvarchar"
					},
					{
						"name": "Monthly_Depn",
						"type": "nvarchar"
					},
					{
						"name": "Current_NBV",
						"type": "nvarchar"
					},
					{
						"name": "Region",
						"type": "nvarchar"
					},
					{
						"name": "UR_DW",
						"type": "nvarchar"
					},
					{
						"name": "Site",
						"type": "nvarchar"
					},
					{
						"name": "Category_1",
						"type": "nvarchar"
					},
					{
						"name": "Category_2",
						"type": "nvarchar"
					},
					{
						"name": "Category_3",
						"type": "nvarchar"
					},
					{
						"name": "TOPsCategory",
						"type": "nvarchar"
					},
					{
						"name": "Expected_weekly_checks",
						"type": "nvarchar"
					},
					{
						"name": "Condition",
						"type": "nvarchar"
					},
					{
						"name": "Make",
						"type": "nvarchar"
					},
					{
						"name": "Model",
						"type": "nvarchar"
					},
					{
						"name": "Registration",
						"type": "nvarchar"
					},
					{
						"name": "Fuel_Type",
						"type": "nvarchar"
					},
					{
						"name": "V5_Recorded",
						"type": "nvarchar"
					},
					{
						"name": "Serial_Number",
						"type": "nvarchar"
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					},
					{
						"name": "Havs",
						"type": "nvarchar"
					},
					{
						"name": "Exposure",
						"type": "nvarchar"
					},
					{
						"name": "Date_last_verified",
						"type": "nvarchar"
					},
					{
						"name": "Maintenance_date",
						"type": "nvarchar"
					},
					{
						"name": "Maintenance_costs",
						"type": "nvarchar"
					},
					{
						"name": "Upload",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "Tivoli",
					"table": "FixedAssets_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Reception')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Reception_OA_ProjectCodesCombined')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Reception",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "project",
						"type": "varchar"
					},
					{
						"name": "panlcode",
						"type": "varchar"
					},
					{
						"name": "workstage",
						"type": "varchar"
					},
					{
						"name": "del",
						"type": "bit"
					},
					{
						"name": "autoload",
						"type": "bit"
					},
					{
						"name": "stdate",
						"type": "date"
					},
					{
						"name": "endate",
						"type": "date"
					},
					{
						"name": "stat",
						"type": "varchar"
					},
					{
						"name": "rulecode",
						"type": "varchar"
					},
					{
						"name": "unqkey",
						"type": "varchar"
					},
					{
						"name": "xchar2",
						"type": "varchar"
					},
					{
						"name": "xdate1",
						"type": "date"
					},
					{
						"name": "xdate2",
						"type": "date"
					},
					{
						"name": "xlog1",
						"type": "bit"
					},
					{
						"name": "xlog2",
						"type": "bit"
					},
					{
						"name": "xchar1",
						"type": "varchar"
					},
					{
						"name": "billinglimit",
						"type": "decimal",
						"precision": 17,
						"scale": 2
					},
					{
						"name": "UpdatedDateTime",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "OA",
					"table": "oa_pcvalcmb"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Reception')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Reception_POSystem_ActivityCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Reception",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ActivityCode",
						"type": "nvarchar"
					},
					{
						"name": "ActivityName",
						"type": "nvarchar"
					},
					{
						"name": "ActivityCategory",
						"type": "nvarchar"
					},
					{
						"name": "ActivityType",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "POSystem",
					"table": "ActivityCodes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Reception')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Reception_POSystem_ProjectCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Reception",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProjectCode",
						"type": "nvarchar"
					},
					{
						"name": "ProjectName",
						"type": "nvarchar"
					},
					{
						"name": "ClientCode",
						"type": "nvarchar"
					},
					{
						"name": "ClientName",
						"type": "nvarchar"
					},
					{
						"name": "ManagerCode",
						"type": "nvarchar"
					},
					{
						"name": "ManagerName",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "POSystem",
					"table": "ProjectCodes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Reception')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Reception_db')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Reception",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Reception')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Applications')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Applications2_db",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SQL Databases"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Applications2_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Applications_ActiveEmployeesByManager')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Applications2_db",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SQL Tables"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmployeeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ManagerID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "Onboarding",
					"table": "ActiveEmployeesByManager"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Applications2_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Applications_SW_Contract_Rates')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Applications2_db",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SQL Tables"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "sw_ref",
						"type": "nvarchar"
					},
					{
						"name": "site",
						"type": "nvarchar"
					},
					{
						"name": "task",
						"type": "nvarchar"
					},
					{
						"name": "value",
						"type": "decimal",
						"precision": 12,
						"scale": 2
					},
					{
						"name": "DateAdded",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateModified",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateDeleted",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "SW",
					"table": "SW_Contract_Rates"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Applications2_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Applications_SW_Finance_Codes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Applications2_db",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SQL Tables"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "sw_ref",
						"type": "nvarchar"
					},
					{
						"name": "site",
						"type": "nvarchar"
					},
					{
						"name": "function",
						"type": "nvarchar"
					},
					{
						"name": "DateAdded",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateModified",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateDeleted",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Dep Level 3",
						"type": "nvarchar"
					},
					{
						"name": "Dep Level 2",
						"type": "nvarchar"
					},
					{
						"name": "Dep Level 1",
						"type": "nvarchar"
					},
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "SW",
					"table": "SW_Finance_Codes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Applications2_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Applications_SW_Site_Data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Applications2_db",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SQL Tables"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sw_ref",
						"type": "nvarchar"
					},
					{
						"name": "site",
						"type": "nvarchar"
					},
					{
						"name": "team",
						"type": "nvarchar"
					},
					{
						"name": "week",
						"type": "nvarchar"
					},
					{
						"name": "pcode",
						"type": "nvarchar"
					},
					{
						"name": "map",
						"type": "nvarchar"
					},
					{
						"name": "location",
						"type": "nvarchar"
					},
					{
						"name": "town",
						"type": "nvarchar"
					},
					{
						"name": "address",
						"type": "nvarchar"
					},
					{
						"name": "postcode",
						"type": "nvarchar"
					},
					{
						"name": "site_address",
						"type": "nvarchar"
					},
					{
						"name": "grid",
						"type": "nvarchar"
					},
					{
						"name": "latitude",
						"type": "nvarchar"
					},
					{
						"name": "longitude",
						"type": "nvarchar"
					},
					{
						"name": "dept_id",
						"type": "nvarchar"
					},
					{
						"name": "dept_desc",
						"type": "nvarchar"
					},
					{
						"name": "site_contact",
						"type": "nvarchar"
					},
					{
						"name": "site_phone",
						"type": "nvarchar"
					},
					{
						"name": "function",
						"type": "nvarchar"
					},
					{
						"name": "grass_m",
						"type": "decimal",
						"precision": 18,
						"scale": 10
					},
					{
						"name": "gras_freq",
						"type": "int",
						"precision": 10
					},
					{
						"name": "hard_m",
						"type": "decimal",
						"precision": 18,
						"scale": 10
					},
					{
						"name": "hard_freq",
						"type": "int",
						"precision": 10
					},
					{
						"name": "rough_m",
						"type": "decimal",
						"precision": 18,
						"scale": 10
					},
					{
						"name": "rough_freq",
						"type": "int",
						"precision": 10
					},
					{
						"name": "invasive_m",
						"type": "decimal",
						"precision": 18,
						"scale": 10
					},
					{
						"name": "invasive_freq",
						"type": "int",
						"precision": 10
					},
					{
						"name": "hedge_m",
						"type": "decimal",
						"precision": 18,
						"scale": 10
					},
					{
						"name": "hedge_freq",
						"type": "int",
						"precision": 10
					},
					{
						"name": "shrub_m",
						"type": "decimal",
						"precision": 18,
						"scale": 10
					},
					{
						"name": "shrub_freq",
						"type": "int",
						"precision": 10
					},
					{
						"name": "risk",
						"type": "nvarchar"
					},
					{
						"name": "access",
						"type": "nvarchar"
					},
					{
						"name": "comments",
						"type": "nvarchar"
					},
					{
						"name": "r_manager",
						"type": "nvarchar"
					},
					{
						"name": "a_manager",
						"type": "nvarchar"
					},
					{
						"name": "tops_user",
						"type": "nvarchar"
					},
					{
						"name": "tos_account",
						"type": "nvarchar"
					},
					{
						"name": "DateAdded",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateModified",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateDeleted",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Dep Level 3",
						"type": "nvarchar"
					},
					{
						"name": "Dep Level 2",
						"type": "nvarchar"
					},
					{
						"name": "Dep Level 1",
						"type": "nvarchar"
					},
					{
						"name": "SW_Manager",
						"type": "nvarchar"
					},
					{
						"name": "Contact",
						"type": "nvarchar"
					},
					{
						"name": "SW_Site_Contact",
						"type": "nvarchar"
					},
					{
						"name": "LitterLeaf_Freq",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LitterLeaf_m",
						"type": "decimal",
						"precision": 18,
						"scale": 10
					},
					{
						"name": "Trees_Freq",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Trees_m",
						"type": "decimal",
						"precision": 18,
						"scale": 10
					},
					{
						"name": "Gullies_Freq",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Gullies_m",
						"type": "decimal",
						"precision": 18,
						"scale": 10
					},
					{
						"name": "Planters_Freq",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Planters_m",
						"type": "decimal",
						"precision": 18,
						"scale": 10
					},
					{
						"name": "SiteVisit_Freq",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SiteVisit_m",
						"type": "decimal",
						"precision": 18,
						"scale": 10
					}
				],
				"typeProperties": {
					"schema": "SW",
					"table": "SW_Site_Data"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Applications2_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Applications_TempTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Applications2_db",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SQL Tables"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "machinetype",
						"type": "nvarchar"
					},
					{
						"name": "make",
						"type": "nvarchar"
					},
					{
						"name": "model",
						"type": "nvarchar"
					},
					{
						"name": "noiseleveldecibles",
						"type": "nvarchar"
					},
					{
						"name": "bookmagnitude",
						"type": "nvarchar"
					},
					{
						"name": "wearandtearallowance",
						"type": "nvarchar"
					},
					{
						"name": "actualvibrationmagnitude",
						"type": "nvarchar"
					},
					{
						"name": "exposurepointminsperhour",
						"type": "nvarchar"
					},
					{
						"name": "timetoreacheav",
						"type": "nvarchar"
					},
					{
						"name": "timetoreachelv",
						"type": "nvarchar"
					},
					{
						"name": "exposuredurationtwa",
						"type": "nvarchar"
					},
					{
						"name": "exposurepointsdailysinglemachine",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ffs"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Applications2_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Applications_tmpEmployee')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Applications2_db",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SQL Tables"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PayrollID",
						"type": "nvarchar"
					},
					{
						"name": "TopsID",
						"type": "nvarchar"
					},
					{
						"name": "Forename",
						"type": "nvarchar"
					},
					{
						"name": "Surname",
						"type": "nvarchar"
					},
					{
						"name": "FullName",
						"type": "nvarchar"
					},
					{
						"name": "KnownAs",
						"type": "nvarchar"
					},
					{
						"name": "JobTitle",
						"type": "nvarchar"
					},
					{
						"name": "StartDate",
						"type": "date"
					},
					{
						"name": "LeaveDate",
						"type": "date"
					},
					{
						"name": "Leave",
						"type": "nvarchar"
					},
					{
						"name": "Email",
						"type": "nvarchar"
					},
					{
						"name": "WorkType",
						"type": "nvarchar"
					},
					{
						"name": "Base",
						"type": "nvarchar"
					},
					{
						"name": "ProjectCode",
						"type": "nvarchar"
					},
					{
						"name": "ProjectName",
						"type": "nvarchar"
					},
					{
						"name": "ContractType",
						"type": "nvarchar"
					},
					{
						"name": "TeamLeaderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SupervisorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ManagerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AM_Code",
						"type": "nvarchar"
					},
					{
						"name": "Region",
						"type": "nvarchar"
					},
					{
						"name": "AOMAccount",
						"type": "nvarchar"
					},
					{
						"name": "Operations",
						"type": "nvarchar"
					},
					{
						"name": "gdnUsrID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DateAdded",
						"type": "date"
					},
					{
						"name": "LastUpdatedDate",
						"type": "date"
					},
					{
						"name": "DateDeleted",
						"type": "date"
					},
					{
						"name": "IsManager",
						"type": "bit"
					},
					{
						"name": "IsSupervisor",
						"type": "bit"
					},
					{
						"name": "IsTeamLeader",
						"type": "bit"
					},
					{
						"name": "QuoteApprovalLimit",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tmpEmployee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Applications2_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Reception')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Reception",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SQL Databases"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Reception')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Reception_Cascade_Employee_Staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Reception",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SQL Tables"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Employee Id",
						"type": "varchar"
					},
					{
						"name": "Title",
						"type": "varchar"
					},
					{
						"name": "Firstname",
						"type": "varchar"
					},
					{
						"name": "Surname",
						"type": "varchar"
					},
					{
						"name": "Known As",
						"type": "varchar"
					},
					{
						"name": "Current Position",
						"type": "varchar"
					},
					{
						"name": "Hierarchy",
						"type": "varchar"
					},
					{
						"name": "Work Email",
						"type": "varchar"
					},
					{
						"name": "Driver",
						"type": "varchar"
					},
					{
						"name": "Location",
						"type": "varchar"
					},
					{
						"name": "Cont  Service Date",
						"type": "varchar"
					},
					{
						"name": "Start Date",
						"type": "varchar"
					},
					{
						"name": "Date of Birth",
						"type": "varchar"
					},
					{
						"name": "Gender",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "Work Phone",
						"type": "varchar"
					},
					{
						"name": "Work Mobile Phone Number",
						"type": "varchar"
					},
					{
						"name": "Post Code",
						"type": "varchar"
					},
					{
						"name": "Job Title",
						"type": "varchar"
					},
					{
						"name": "Contract",
						"type": "varchar"
					},
					{
						"name": "Grade",
						"type": "varchar"
					},
					{
						"name": "Pay Frequency",
						"type": "varchar"
					},
					{
						"name": "Project Code",
						"type": "varchar"
					},
					{
						"name": "Skill Level",
						"type": "varchar"
					},
					{
						"name": "FTE",
						"type": "varchar"
					},
					{
						"name": "Hours",
						"type": "varchar"
					},
					{
						"name": "Basic Pay",
						"type": "varchar"
					},
					{
						"name": "Pay Basis",
						"type": "varchar"
					},
					{
						"name": "Fixed Term Contract End Date",
						"type": "varchar"
					},
					{
						"name": "Hourly Rate",
						"type": "varchar"
					},
					{
						"name": "Works For",
						"type": "varchar"
					},
					{
						"name": "Left Date",
						"type": "varchar"
					},
					{
						"name": "Last Working Day",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "Cascade",
					"table": "Employee_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Reception')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SW_Site_Data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TivoliBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Site Data",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SW Data Tables 2022.xlsx",
						"container": "tivoli-excel"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "Site_ref",
						"type": "String"
					},
					{
						"name": "site",
						"type": "String"
					},
					{
						"name": "team",
						"type": "String"
					},
					{
						"name": "week",
						"type": "String"
					},
					{
						"name": "pcode",
						"type": "String"
					},
					{
						"name": "map",
						"type": "String"
					},
					{
						"name": "location",
						"type": "String"
					},
					{
						"name": "town",
						"type": "String"
					},
					{
						"name": "address",
						"type": "String"
					},
					{
						"name": "postcode",
						"type": "String"
					},
					{
						"name": "site_address",
						"type": "String"
					},
					{
						"name": "grid",
						"type": "String"
					},
					{
						"name": "latitude",
						"type": "String"
					},
					{
						"name": "longitude",
						"type": "String"
					},
					{
						"name": "dept_id",
						"type": "String"
					},
					{
						"name": "dept_desc",
						"type": "String"
					},
					{
						"name": "Dep level 3",
						"type": "String"
					},
					{
						"name": "Dep level 2",
						"type": "String"
					},
					{
						"name": "Dep level 1",
						"type": "String"
					},
					{
						"name": "SW_Manager",
						"type": "String"
					},
					{
						"name": "Contact",
						"type": "String"
					},
					{
						"name": "SW_Site_Contact",
						"type": "String"
					},
					{
						"name": "Site_Phone",
						"type": "String"
					},
					{
						"name": "function",
						"type": "String"
					},
					{
						"name": "grass_m",
						"type": "String"
					},
					{
						"name": "gras_freq",
						"type": "String"
					},
					{
						"name": "rough_m",
						"type": "String"
					},
					{
						"name": "rough_freq",
						"type": "String"
					},
					{
						"name": "shrub_m",
						"type": "String"
					},
					{
						"name": "shrub_freq",
						"type": "String"
					},
					{
						"name": "hedge_m",
						"type": "String"
					},
					{
						"name": "hedge_freq",
						"type": "String"
					},
					{
						"name": "hard_m",
						"type": "String"
					},
					{
						"name": "hard_freq",
						"type": "String"
					},
					{
						"name": "LitterLeaf_Freq",
						"type": "String"
					},
					{
						"name": "LitterLeaf_m",
						"type": "String"
					},
					{
						"name": "invasive_m",
						"type": "String"
					},
					{
						"name": "invasive_freq",
						"type": "String"
					},
					{
						"name": "Trees_Freq",
						"type": "String"
					},
					{
						"name": "Trees_m",
						"type": "String"
					},
					{
						"name": "Gullies_Freq",
						"type": "String"
					},
					{
						"name": "Gullies_m",
						"type": "String"
					},
					{
						"name": "Planters_Freq",
						"type": "String"
					},
					{
						"name": "Planters_m",
						"type": "String"
					},
					{
						"name": "SiteVisit_Freq",
						"type": "String"
					},
					{
						"name": "SiteVisit_m",
						"type": "String"
					},
					{
						"name": "risk",
						"type": "String"
					},
					{
						"name": "access",
						"type": "String"
					},
					{
						"name": "comments",
						"type": "String"
					},
					{
						"name": "r_manager",
						"type": "String"
					},
					{
						"name": "a_manager",
						"type": "String"
					},
					{
						"name": "tops_user",
						"type": "String"
					},
					{
						"name": "tos_account",
						"type": "String"
					},
					{
						"name": "DateAdded",
						"type": "String"
					},
					{
						"name": "DateModified",
						"type": "String"
					},
					{
						"name": "DateDeleted",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TivoliBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TivoliDW_db')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TiviliDW_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TiviliDW_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cds_activity_codes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TivoliBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "activity_codes.csv",
						"container": "tivoli-cds"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ActivityCode",
						"type": "String"
					},
					{
						"name": "ActivityName",
						"type": "String"
					},
					{
						"name": "ActivityCategory",
						"type": "String"
					},
					{
						"name": "ActivityType",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TivoliBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cds_managers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TivoliBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "managers.csv",
						"container": "tivoli-cds"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "AreaCode",
						"type": "String"
					},
					{
						"name": "ManagerEmail",
						"type": "String"
					},
					{
						"name": "ManagerName",
						"type": "String"
					},
					{
						"name": "ManagerQuoteLimit",
						"type": "String"
					},
					{
						"name": "ManagerRegion",
						"type": "String"
					},
					{
						"name": "RMCode",
						"type": "String"
					},
					{
						"name": "TOPsID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TivoliBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cds_project_codes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TivoliBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "project_codes.csv",
						"container": "tivoli-cds"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ProjectCode",
						"type": "String"
					},
					{
						"name": "ProjectName",
						"type": "String"
					},
					{
						"name": "ClientCode",
						"type": "String"
					},
					{
						"name": "ClientName",
						"type": "String"
					},
					{
						"name": "ManagerCode",
						"type": "String"
					},
					{
						"name": "ManagerName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TivoliBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cds_regional_directors')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TivoliBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "regional_directors.csv",
						"container": "tivoli-cds"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "RegionalDirectorCode",
						"type": "String"
					},
					{
						"name": "RegionalDirectorEmail",
						"type": "String"
					},
					{
						"name": "RegionalDirectorName",
						"type": "String"
					},
					{
						"name": "RegionalDirectorPOLimit",
						"type": "String"
					},
					{
						"name": "RegionalDirectorQuoteLimit",
						"type": "String"
					},
					{
						"name": "RDCode",
						"type": "String"
					},
					{
						"name": "RegionalDirectorRegion",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TivoliBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cds_regional_managers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TivoliBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "regional_managers.csv",
						"container": "tivoli-cds"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "RegionalManagerCode",
						"type": "String"
					},
					{
						"name": "RegionalManagerEmail",
						"type": "String"
					},
					{
						"name": "RegionalManagerName",
						"type": "String"
					},
					{
						"name": "RegionalDirectorCode",
						"type": "String"
					},
					{
						"name": "RegionalDirectorRegion",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TivoliBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cds_suppliers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TivoliBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "suppliers.csv",
						"container": "tivoli-cds"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SupplierEmail",
						"type": "String"
					},
					{
						"name": "SupplierName",
						"type": "String"
					},
					{
						"name": "SupplierPostcode",
						"type": "String"
					},
					{
						"name": "SupplierCode",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TivoliBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cds_workstages')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TivoliBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "workstages.csv",
						"container": "tivoli-cds"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Workstage",
						"type": "String"
					},
					{
						"name": "WorkstageDescription",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TivoliBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/employee_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TivoliBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Employees.csv",
						"container": "tivoli-topsdatabase"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "payroll",
						"type": "String"
					},
					{
						"name": "tops",
						"type": "String"
					},
					{
						"name": "forename",
						"type": "String"
					},
					{
						"name": "surname",
						"type": "String"
					},
					{
						"name": "lowercase",
						"type": "String"
					},
					{
						"name": "know as",
						"type": "String"
					},
					{
						"name": "job",
						"type": "String"
					},
					{
						"name": "start",
						"type": "String"
					},
					{
						"name": "leave",
						"type": "String"
					},
					{
						"name": "leave_date",
						"type": "String"
					},
					{
						"name": "email",
						"type": "String"
					},
					{
						"name": "work_type",
						"type": "String"
					},
					{
						"name": "base",
						"type": "String"
					},
					{
						"name": "pcode",
						"type": "String"
					},
					{
						"name": "p_name",
						"type": "String"
					},
					{
						"name": "c_name",
						"type": "String"
					},
					{
						"name": "operations",
						"type": "String"
					},
					{
						"name": "teaml",
						"type": "String"
					},
					{
						"name": "super",
						"type": "String"
					},
					{
						"name": "manager",
						"type": "String"
					},
					{
						"name": "am_code",
						"type": "String"
					},
					{
						"name": "region",
						"type": "String"
					},
					{
						"name": "topsac",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TivoliBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/posys_suppliers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Applications2_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SupplierEmail",
						"type": "nvarchar"
					},
					{
						"name": "SupplierName",
						"type": "nvarchar"
					},
					{
						"name": "SupplierPostcode",
						"type": "nvarchar"
					},
					{
						"name": "SupplierCode",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Address1",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "POSystem",
					"table": "Suppliers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Applications2_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/posystem_activity_codes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Applications2_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ActivityCode",
						"type": "nvarchar"
					},
					{
						"name": "ActivityName",
						"type": "nvarchar"
					},
					{
						"name": "ActivityCategory",
						"type": "nvarchar"
					},
					{
						"name": "ActivityType",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "POSystem",
					"table": "ActivityCodes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Applications2_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/posystem_managers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Applications2_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AreaCode",
						"type": "nvarchar"
					},
					{
						"name": "ManagerEmail",
						"type": "nvarchar"
					},
					{
						"name": "ManagerName",
						"type": "nvarchar"
					},
					{
						"name": "ManagerQuoteLimit",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ManagerRegion",
						"type": "nvarchar"
					},
					{
						"name": "RMCode",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TOPsID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "POSystem",
					"table": "Managers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Applications2_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/posystem_project_codes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Applications2_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProjectCode",
						"type": "nvarchar"
					},
					{
						"name": "ProjectName",
						"type": "nvarchar"
					},
					{
						"name": "ClientCode",
						"type": "nvarchar"
					},
					{
						"name": "ClientName",
						"type": "nvarchar"
					},
					{
						"name": "ManagerCode",
						"type": "nvarchar"
					},
					{
						"name": "ManagerName",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "POSystem",
					"table": "ProjectCodes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Applications2_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/posystem_regional_directors')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Applications2_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "RegionalDirectorCode",
						"type": "nvarchar"
					},
					{
						"name": "RegionalDirectorEmail",
						"type": "nvarchar"
					},
					{
						"name": "RegionalDirectorName",
						"type": "nvarchar"
					},
					{
						"name": "RegionalDirectorPOLimit",
						"type": "decimal",
						"precision": 28,
						"scale": 6
					},
					{
						"name": "RegionalDirectorQuoteLimit",
						"type": "decimal",
						"precision": 28,
						"scale": 6
					},
					{
						"name": "RDCode",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RegionalDirectorRegion",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "POSystem",
					"table": "RegionalDirectors"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Applications2_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/posystem_regional_managers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Applications2_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "RegionalManagerCode",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RegionalManagerEmail",
						"type": "nvarchar"
					},
					{
						"name": "RegionalManagerName",
						"type": "nvarchar"
					},
					{
						"name": "RegionalDirectorCode",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RegionalDirectorRegion",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "POSystem",
					"table": "RegionalManagers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Applications2_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/posystem_suppliers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Applications2_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SupplierEmail",
						"type": "nvarchar"
					},
					{
						"name": "SupplierName",
						"type": "nvarchar"
					},
					{
						"name": "SupplierPostcode",
						"type": "nvarchar"
					},
					{
						"name": "SupplierCode",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "POSystem",
					"table": "Suppliers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Applications2_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/posystem_workstages')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Applications2_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Workstage",
						"type": "nvarchar"
					},
					{
						"name": "WorkstageDescription",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "POSystem",
					"table": "Workstages"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Applications2_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/projects_staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PowerBI",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProjectCode",
						"type": "nvarchar"
					},
					{
						"name": "Customer",
						"type": "nvarchar"
					},
					{
						"name": "CustomerCode",
						"type": "nvarchar"
					},
					{
						"name": "ManagerName",
						"type": "nvarchar"
					},
					{
						"name": "ManagerCode",
						"type": "nvarchar"
					},
					{
						"name": "ManagerEmail",
						"type": "nvarchar"
					},
					{
						"name": "SiteAddress",
						"type": "nvarchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "Tivoli",
					"table": "tbl_EW_Projects_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PowerBI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/qew_projects')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Applications2_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProjectCode",
						"type": "nvarchar"
					},
					{
						"name": "Customer",
						"type": "nvarchar"
					},
					{
						"name": "CustomerCode",
						"type": "nvarchar"
					},
					{
						"name": "ManagerName",
						"type": "nvarchar"
					},
					{
						"name": "ManagerCode",
						"type": "nvarchar"
					},
					{
						"name": "SiteAddress",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "ManagerEmail",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "QEW",
					"table": "vw_Projects"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Applications2_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/suppliers_Staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PowerBI",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SupplierEmail",
						"type": "nvarchar"
					},
					{
						"name": "SupplierName",
						"type": "nvarchar"
					},
					{
						"name": "SupplierPostcode",
						"type": "nvarchar"
					},
					{
						"name": "SupplierCode",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Address1",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "Tivoli",
					"table": "tbl_Suppliers_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PowerBI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sw_contract_rates_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TivoliBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SW_Contract_Rates_Upload.csv",
						"container": "tivoli-excel"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "sw_ref",
						"type": "String"
					},
					{
						"name": "site",
						"type": "String"
					},
					{
						"name": "task",
						"type": "String"
					},
					{
						"name": "value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TivoliBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sw_contract_rates_staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TivoliAPI_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "sw_ref",
						"type": "varchar"
					},
					{
						"name": "site",
						"type": "varchar"
					},
					{
						"name": "task",
						"type": "varchar"
					},
					{
						"name": "value",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "Tivoli",
					"table": "SW_Contract_Rates_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TivoliAPI_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sw_finance_codes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TivoliAPI_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sw_ref",
						"type": "nvarchar"
					},
					{
						"name": "site",
						"type": "nvarchar"
					},
					{
						"name": "dept_id",
						"type": "nvarchar"
					},
					{
						"name": "dept_desc",
						"type": "nvarchar"
					},
					{
						"name": "sw_region",
						"type": "nvarchar"
					},
					{
						"name": "sw_team",
						"type": "nvarchar"
					},
					{
						"name": "sw_manager",
						"type": "nvarchar"
					},
					{
						"name": "site_phone",
						"type": "nvarchar"
					},
					{
						"name": "function",
						"type": "nvarchar"
					},
					{
						"name": "DateAdded",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateModified",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateDeleted",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "Tivoli",
					"table": "SW_Finance_Codes_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TivoliAPI_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sw_finance_codes_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TivoliBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SW_Finance_Codes_Upload.csv",
						"container": "tivoli-excel"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "sw_ref",
						"type": "String"
					},
					{
						"name": "site",
						"type": "String"
					},
					{
						"name": "dept_id",
						"type": "String"
					},
					{
						"name": "dept_desc",
						"type": "String"
					},
					{
						"name": "sw_region",
						"type": "String"
					},
					{
						"name": "sw_team",
						"type": "String"
					},
					{
						"name": "sw_manager",
						"type": "String"
					},
					{
						"name": "site_phone",
						"type": "String"
					},
					{
						"name": "function",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TivoliBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sw_site_data_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TivoliBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SW_Site_Data_Upload.csv",
						"container": "tivoli-excel"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "sw_ref",
						"type": "String"
					},
					{
						"name": "site",
						"type": "String"
					},
					{
						"name": "team",
						"type": "String"
					},
					{
						"name": "week",
						"type": "String"
					},
					{
						"name": "pcode",
						"type": "String"
					},
					{
						"name": "map",
						"type": "String"
					},
					{
						"name": "location",
						"type": "String"
					},
					{
						"name": "town",
						"type": "String"
					},
					{
						"name": "address",
						"type": "String"
					},
					{
						"name": "postcode",
						"type": "String"
					},
					{
						"name": "site_address",
						"type": "String"
					},
					{
						"name": "grid",
						"type": "String"
					},
					{
						"name": "latitude",
						"type": "String"
					},
					{
						"name": "longitude",
						"type": "String"
					},
					{
						"name": "dept_id",
						"type": "String"
					},
					{
						"name": "dept_desc",
						"type": "String"
					},
					{
						"name": "sw_region",
						"type": "String"
					},
					{
						"name": "sw_team",
						"type": "String"
					},
					{
						"name": "site_contact",
						"type": "String"
					},
					{
						"name": "site_phone",
						"type": "String"
					},
					{
						"name": "function",
						"type": "String"
					},
					{
						"name": "grass_m",
						"type": "String"
					},
					{
						"name": "gras_freq",
						"type": "String"
					},
					{
						"name": "hard_m",
						"type": "String"
					},
					{
						"name": "hard_freq",
						"type": "String"
					},
					{
						"name": "rough_m",
						"type": "String"
					},
					{
						"name": "rough_freq",
						"type": "String"
					},
					{
						"name": "invasive_m",
						"type": "String"
					},
					{
						"name": "invasive_freq",
						"type": "String"
					},
					{
						"name": "hedge_m",
						"type": "String"
					},
					{
						"name": "hedge_freq",
						"type": "String"
					},
					{
						"name": "shrub_m",
						"type": "String"
					},
					{
						"name": "shrub_freq",
						"type": "String"
					},
					{
						"name": "risk",
						"type": "String"
					},
					{
						"name": "access",
						"type": "String"
					},
					{
						"name": "comments",
						"type": "String"
					},
					{
						"name": "r_manager",
						"type": "String"
					},
					{
						"name": "a_manager",
						"type": "String"
					},
					{
						"name": "tops_user",
						"type": "String"
					},
					{
						"name": "tos_account",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TivoliBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sw_site_data_stagng')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TivoliAPI_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "sw_ref",
						"type": "varchar"
					},
					{
						"name": "site",
						"type": "varchar"
					},
					{
						"name": "team",
						"type": "varchar"
					},
					{
						"name": "week",
						"type": "varchar"
					},
					{
						"name": "pcode",
						"type": "varchar"
					},
					{
						"name": "map",
						"type": "varchar"
					},
					{
						"name": "location",
						"type": "varchar"
					},
					{
						"name": "town",
						"type": "varchar"
					},
					{
						"name": "address",
						"type": "varchar"
					},
					{
						"name": "postcode",
						"type": "varchar"
					},
					{
						"name": "site_address",
						"type": "varchar"
					},
					{
						"name": "grid",
						"type": "varchar"
					},
					{
						"name": "latitude",
						"type": "varchar"
					},
					{
						"name": "longitude",
						"type": "varchar"
					},
					{
						"name": "dept_id",
						"type": "varchar"
					},
					{
						"name": "dept_desc",
						"type": "varchar"
					},
					{
						"name": "sw_region",
						"type": "varchar"
					},
					{
						"name": "sw_team",
						"type": "varchar"
					},
					{
						"name": "site_contact",
						"type": "varchar"
					},
					{
						"name": "site_phone",
						"type": "varchar"
					},
					{
						"name": "function",
						"type": "varchar"
					},
					{
						"name": "grass_m",
						"type": "decimal",
						"precision": 18,
						"scale": 10
					},
					{
						"name": "gras_freq",
						"type": "int",
						"precision": 10
					},
					{
						"name": "hard_m",
						"type": "decimal",
						"precision": 18,
						"scale": 10
					},
					{
						"name": "hard_freq",
						"type": "int",
						"precision": 10
					},
					{
						"name": "rough_m",
						"type": "decimal",
						"precision": 18,
						"scale": 10
					},
					{
						"name": "rough_freq",
						"type": "int",
						"precision": 10
					},
					{
						"name": "invasive_m",
						"type": "decimal",
						"precision": 18,
						"scale": 10
					},
					{
						"name": "invasive_freq",
						"type": "int",
						"precision": 10
					},
					{
						"name": "hedge_m",
						"type": "decimal",
						"precision": 18,
						"scale": 10
					},
					{
						"name": "hedge_freq",
						"type": "int",
						"precision": 10
					},
					{
						"name": "shrub_m",
						"type": "decimal",
						"precision": 18,
						"scale": 10
					},
					{
						"name": "shrub_freq",
						"type": "int",
						"precision": 10
					},
					{
						"name": "risk",
						"type": "varchar"
					},
					{
						"name": "access",
						"type": "varchar"
					},
					{
						"name": "comments",
						"type": "varchar"
					},
					{
						"name": "r_manager",
						"type": "varchar"
					},
					{
						"name": "a_manager",
						"type": "varchar"
					},
					{
						"name": "tops_user",
						"type": "varchar"
					},
					{
						"name": "tos_account",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "Tivoli",
					"table": "SW_Site_Data_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TivoliAPI_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sw_work_elements_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TivoliBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SW_Work_Elements_Upload.csv",
						"container": "tivoli-excel"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "task_id",
						"type": "String"
					},
					{
						"name": "task",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TivoliBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sw_work_elements_staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TivoliAPI_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "task_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "task",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "Tivoli",
					"table": "SW_Work_Elements_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TivoliAPI_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tbl_PipelineRuns')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TivoliAPI_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PipelineName",
						"type": "nvarchar"
					},
					{
						"name": "Status",
						"type": "nvarchar"
					},
					{
						"name": "StatusDate",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "RDF",
					"table": "tbl_PipelineRuns"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TivoliAPI_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Applications2_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Applications2_db_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Applications_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AmazonRdsForSqlServer",
				"typeProperties": {
					"connectionString": "[parameters('Applications_db_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ftp_Cascade')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FtpServer",
				"typeProperties": {
					"host": "[parameters('Ftp_Cascade_properties_typeProperties_host')]",
					"port": "",
					"enableSsl": true,
					"enableServerCertificateValidation": false,
					"authenticationType": "Basic",
					"userName": "[parameters('Ftp_Cascade_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Ftp_Cascade_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PowerBI')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('PowerBI_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Reception')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Reception_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TiviliDW_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('TiviliDW_db_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TivoliAPI_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('TivoliAPI_db_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TivoliBlob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('TivoliBlob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TivoliKeys')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('TivoliKeys_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TivoliSSISLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"connectionString": "[parameters('TivoliSSISLinkedService_connectionString')]",
					"fileShare": ""
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/03_00_Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "LoadCDSData_Applications",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "LoadCDSData_Reception",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-02-03T13:35:00Z",
						"timeZone": "UTC",
						"schedule": {
							"hours": [
								3
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/LoadCDSData_Applications')]",
				"[concat(variables('factoryId'), '/pipelines/LoadCDSData_Reception')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily 02_00 Stopped')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ProccessAOMData",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-01-08T15:12:00Z",
						"timeZone": "UTC",
						"schedule": {
							"hours": [
								2
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ProccessAOMData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily 3am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopyOAProjCodesCmbtoReception",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "QEW Projects",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-02-03T15:17:00Z",
						"timeZone": "UTC",
						"schedule": {
							"hours": [
								3
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyOAProjCodesCmbtoReception')]",
				"[concat(variables('factoryId'), '/pipelines/QEW Projects')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily 5am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Pipeline_TOPSDatabase",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Create_Applications_ActiveEmployeesByManager",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-03-02T14:37:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								5
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Pipeline_TOPSDatabase')]",
				"[concat(variables('factoryId'), '/pipelines/Create_Applications_ActiveEmployeesByManager')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily 7am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Import_CascadeToAZ_EmployeeData",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-03-14T16:36:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								7
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Import_CascadeToAZ_EmployeeData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily 8am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-04-01T08:44:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								8
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "LoadFAandEmpData",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-11-29T00:00:00Z",
						"timeZone": "UTC",
						"schedule": {
							"hours": [
								4
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/LoadFAandEmpData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Every 15 Minutes')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2021-11-14T10:18:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WhenFileArrives')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/tivoli-excel/blobs/FixedAssets",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('WhenFileArrives_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TivoliSSIS')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "UK South",
						"nodeSize": "Standard_D2_v3",
						"numberOfNodes": 1,
						"maxParallelExecutionsPerNode": 1
					},
					"ssisProperties": {
						"catalogInfo": {
							"catalogServerEndpoint": "[parameters('TivoliSSIS_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint')]",
							"catalogAdminUserName": "[parameters('TivoliSSIS_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName')]",
							"catalogAdminPassword": {
								"type": "SecureString",
								"value": "[parameters('TivoliSSIS_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword')]"
							},
							"catalogPricingTier": "S1"
						},
						"edition": "Standard",
						"licenseType": "BasePrice",
						"packageStores": [
							{
								"name": "TivoliSSISPackages",
								"packageStoreLinkedService": {
									"referenceName": "TivoliSSISLinkedService",
									"type": "LinkedServiceReference"
								}
							}
						]
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TivoliSSISLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/oa_fact_GeneralLedger_df')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Tivoli Data Warehouse"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Reception_db",
								"type": "DatasetReference"
							},
							"name": "nltrans"
						},
						{
							"dataset": {
								"referenceName": "TivoliDW_db",
								"type": "DatasetReference"
							},
							"name": "CostCentre"
						},
						{
							"dataset": {
								"referenceName": "TivoliDW_db",
								"type": "DatasetReference"
							},
							"name": "DocumentType"
						},
						{
							"dataset": {
								"referenceName": "TivoliDW_db",
								"type": "DatasetReference"
							},
							"name": "TransactionType"
						},
						{
							"dataset": {
								"referenceName": "TivoliDW_db",
								"type": "DatasetReference"
							},
							"name": "ActivityCode"
						},
						{
							"dataset": {
								"referenceName": "TivoliDW_db",
								"type": "DatasetReference"
							},
							"name": "Customer"
						},
						{
							"dataset": {
								"referenceName": "TivoliDW_db",
								"type": "DatasetReference"
							},
							"name": "Supplier"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "FactGL",
								"type": "DatasetReference"
							},
							"name": "FactSync"
						}
					],
					"transformations": [
						{
							"name": "CosstCentreLookup"
						},
						{
							"name": "DerivedColumns"
						},
						{
							"name": "Staging"
						},
						{
							"name": "DocTypeLookup"
						},
						{
							"name": "TransactionTypeLookup"
						},
						{
							"name": "AlterRowSettings"
						},
						{
							"name": "ActivityCodeLookup"
						},
						{
							"name": "CustomerLookup"
						},
						{
							"name": "SupplierLookup"
						}
					],
					"scriptLines": [
						"parameters{",
						"     LastRunDate as string (\"2022-05-09 00:00:00\")",
						"}",
						"source(output(",
						"          ID as integer,",
						"          unqkey as string,",
						"          {doc-id} as string,",
						"          docdate as date,",
						"          sourceacc as string,",
						"          sourceref as string,",
						"          orderref as string,",
						"          originref as string,",
						"          description as string,",
						"          baseval as decimal(17,2),",
						"          daybook as boolean,",
						"          currvalue as decimal(17,2),",
						"          qty as decimal(18,3),",
						"          yearno as decimal(15,0),",
						"          period as decimal(15,0),",
						"          batchref as string,",
						"          trtyp as string,",
						"          uuserid as string,",
						"          inputdate as date,",
						"          inputtime as integer,",
						"          stat as string,",
						"          costcentre as string,",
						"          expensecode as string,",
						"          docnumber as integer,",
						"          {vat-code} as string,",
						"          transdate as date,",
						"          {nrv-value} as decimal(17,2),",
						"          secval as decimal(17,2),",
						"          line_no as integer,",
						"          postdate as date,",
						"          qunit as string,",
						"          upuser as string,",
						"          upddate as date,",
						"          updtime as integer,",
						"          UpdatedDateTime as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     inputs:['@LastModifedDate' -> ($LastRunDate)],",
						"     procedureName: 'sp_oa_nltrans_DW',",
						"     schemaName: 'dbo',",
						"     resultSet: true,",
						"     format: 'procedure') ~> nltrans",
						"source(output(",
						"          CostCentreID as integer,",
						"          CostCentre as string,",
						"          FromDate as date,",
						"          ToDate as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT [CostCentreID]\\n      ,[CostCentre]\\n      ,[FromDate]\\n      ,[ToDate]\\n       FROM [DW].[DimCostCentre]',",
						"     format: 'query') ~> CostCentre",
						"source(output(",
						"          DocumentTypeID as integer,",
						"          DocID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT [DocumentTypeID]\\n      ,[DocID]\\n  FROM [DW].[DimDocumentType]',",
						"     format: 'query') ~> DocumentType",
						"source(output(",
						"          TransactionTypeID as integer,",
						"          trtyp as string,",
						"          LedgerCode as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT[TransactionTypeID]\\n      ,[trtyp], [LedgerCode]\\n  FROM [DW].[DimTransactionType]',",
						"     format: 'query') ~> TransactionType",
						"source(output(",
						"          ActivityCodeID as integer,",
						"          ActivityCode as string,",
						"          FromDate as date,",
						"          ToDate as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT [ActivityCodeID]\\n      ,[ActivityCode]\\n      ,[FromDate]\\n      ,[ToDate]\\n  FROM [DW].[DimActivityCode]',",
						"     format: 'query') ~> ActivityCode",
						"source(output(",
						"          CustomerID as integer,",
						"          CustomerCode as string,",
						"          FromDate as date,",
						"          ToDate as date,",
						"          LedgerCode as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT[CustomerID]\\n      ,[CustomerCode]\\n      ,[FromDate]\\n      ,[ToDate]\\n       ,\\'SL\\' AS [LedgerCode]\\n FROM [DW].[DimCustomer]',",
						"     format: 'query') ~> Customer",
						"source(output(",
						"          SupplierID as integer,",
						"          SupplierCode as string,",
						"          FromDate as date,",
						"          ToDate as date,",
						"          LedgerCode as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT [SupplierID]\\n      ,[SupplierCode]\\n      ,[FromDate]\\n      ,[ToDate]\\n       ,\\'PL\\' AS [LedgerCode]\\n  FROM [DW].[DimSupplier]',",
						"     format: 'query') ~> Supplier",
						"DocTypeLookup, CostCentre lookup(nltrans@costcentre == CostCentre@CostCentre",
						"     && docdate >= FromDate",
						"     && docdate <= ToDate,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'right')~> CosstCentreLookup",
						"SupplierLookup derive(NewCostCentreID = iif(isNull(CostCentreID), -1,CostCentreID),",
						"          NewDocumentID = iif(isNull(DocumentTypeID), -1, DocumentTypeID),",
						"          NewTransactionTypeID = iif(isNull(TransactionTypeID), -1, TransactionTypeID),",
						"          LastModifiedDate = currentUTC('GMT'),",
						"          NewActivityCodeID = iif(isNull(ActivityCodeID), -1, ActivityCodeID),",
						"          DocumentDateID = toInteger(toString(docdate, 'yyyyMMdd')),",
						"          InputDateID = toInteger(toString(inputdate, 'yyyyMMdd')),",
						"          TransactionDateID = toInteger(toString(transdate, 'yyyyMMdd')),",
						"          YearNo = toInteger(yearno),",
						"          Period = toInteger(period)) ~> DerivedColumns",
						"DerivedColumns select(mapColumn(",
						"          unqkey,",
						"          DocumentDateID,",
						"          CostCentreID = NewCostCentreID,",
						"          DocumentTypeID = NewDocumentID,",
						"          TransactionTypeID = NewTransactionTypeID,",
						"          LastModifiedDateTime = LastModifiedDate,",
						"          ActivityCodeID = NewActivityCodeID,",
						"          CustomerID,",
						"          SupplierID,",
						"          SourceReference = sourceref,",
						"          OrderReference = orderref,",
						"          OriginReference = originref,",
						"          Description = description,",
						"          BaseValue = baseval,",
						"          CurrentValue = currvalue,",
						"          Quantity = qty,",
						"          QuantityUnits = qunit,",
						"          YearNo = DerivedColumns@YearNo,",
						"          Period = DerivedColumns@Period,",
						"          BatchReference = batchref,",
						"          InputDateID,",
						"          InputTimeID = inputtime,",
						"          DocumentNumber = docnumber,",
						"          VatCode = {vat-code},",
						"          LineNo = line_no,",
						"          TransactionDateID",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Staging",
						"nltrans, DocumentType lookup({doc-id} == DocID,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'right')~> DocTypeLookup",
						"CosstCentreLookup, TransactionType lookup(nltrans@trtyp == TransactionType@trtyp,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'right')~> TransactionTypeLookup",
						"Staging alterRow(upsertIf(true())) ~> AlterRowSettings",
						"TransactionTypeLookup, ActivityCode lookup(expensecode == ActivityCode",
						"     && docdate >= ActivityCode@FromDate",
						"     && docdate <= ActivityCode@ToDate,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'right')~> ActivityCodeLookup",
						"ActivityCodeLookup, Customer lookup(sourceacc == CustomerCode",
						"     && docdate >= Customer@FromDate",
						"     && docdate <= Customer@ToDate",
						"     && TransactionType@LedgerCode == Customer@LedgerCode,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'right')~> CustomerLookup",
						"CustomerLookup, Supplier lookup(sourceacc == SupplierCode",
						"     && docdate >= Supplier@FromDate",
						"     && docdate <= Supplier@ToDate",
						"     && TransactionType@LedgerCode == Supplier@LedgerCode,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'right')~> SupplierLookup",
						"AlterRowSettings sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          unqkey as string,",
						"          BatchReference as string,",
						"          DocumentNumber as integer,",
						"          LineNo as integer,",
						"          CostCentreID as integer,",
						"          DocumentTypeID as integer,",
						"          TransactionTypeID as integer,",
						"          ActivityCodeID as integer,",
						"          TransactionDateID as integer,",
						"          DocumentDateID as integer,",
						"          InputDateID as integer,",
						"          InputTimeID as integer,",
						"          CustomerID as integer,",
						"          SupplierID as integer,",
						"          YearNo as integer,",
						"          Period as integer,",
						"          SourceReference as string,",
						"          OrderReference as string,",
						"          OriginReference as string,",
						"          Description as string,",
						"          BaseValue as decimal(18,2),",
						"          CurrentValue as decimal(18,2),",
						"          Quantity as decimal(18,3),",
						"          QuantityUnits as string,",
						"          VatCode as string,",
						"          LastModifiedDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['unqkey'],",
						"     format: 'table',",
						"     batchSize: 10000,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          unqkey,",
						"          BatchReference,",
						"          DocumentNumber,",
						"          LineNo,",
						"          CostCentreID,",
						"          DocumentTypeID,",
						"          TransactionTypeID,",
						"          ActivityCodeID,",
						"          TransactionDateID,",
						"          DocumentDateID,",
						"          InputDateID,",
						"          InputTimeID,",
						"          CustomerID,",
						"          SupplierID,",
						"          YearNo,",
						"          Period,",
						"          SourceReference,",
						"          OrderReference,",
						"          OriginReference,",
						"          Description,",
						"          BaseValue,",
						"          CurrentValue,",
						"          Quantity,",
						"          QuantityUnits,",
						"          VatCode,",
						"          LastModifiedDateTime",
						"     )) ~> FactSync"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Reception_db')]",
				"[concat(variables('factoryId'), '/datasets/TivoliDW_db')]",
				"[concat(variables('factoryId'), '/datasets/FactGL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/oa_fact_ProjectTransactions_df')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Tivoli Data Warehouse"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Reception_db",
								"type": "DatasetReference"
							},
							"name": "pctrans"
						},
						{
							"dataset": {
								"referenceName": "TivoliDW_db",
								"type": "DatasetReference"
							},
							"name": "CostCentre"
						},
						{
							"dataset": {
								"referenceName": "TivoliDW_db",
								"type": "DatasetReference"
							},
							"name": "DocumentType"
						},
						{
							"dataset": {
								"referenceName": "TivoliDW_db",
								"type": "DatasetReference"
							},
							"name": "TransactionType"
						},
						{
							"dataset": {
								"referenceName": "TivoliDW_db",
								"type": "DatasetReference"
							},
							"name": "ActivityCode"
						},
						{
							"dataset": {
								"referenceName": "TivoliDW_db",
								"type": "DatasetReference"
							},
							"name": "WorkStage"
						},
						{
							"dataset": {
								"referenceName": "TivoliDW_db",
								"type": "DatasetReference"
							},
							"name": "Project"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "FactPT",
								"type": "DatasetReference"
							},
							"name": "FactSync"
						}
					],
					"transformations": [
						{
							"name": "CosstCentreLookup"
						},
						{
							"name": "DerivedColumns"
						},
						{
							"name": "Staging"
						},
						{
							"name": "DocTypeLookup"
						},
						{
							"name": "TransactionTypeLookup"
						},
						{
							"name": "AlterRowSettings"
						},
						{
							"name": "ActivityCodeLookup"
						},
						{
							"name": "WorkStageLookup"
						},
						{
							"name": "ProjectLookup"
						}
					],
					"scriptLines": [
						"parameters{",
						"     LastRunDate as string (\"2022-05-09 00:00:00\")",
						"}",
						"source(output(",
						"          ID as integer,",
						"          {doc-id} as string,",
						"          docnumber as integer,",
						"          line_no as integer,",
						"          docdate as date,",
						"          sourceacc as string,",
						"          description as string,",
						"          baseval as decimal(17,2),",
						"          daybook as boolean,",
						"          currvalue as decimal(17,2),",
						"          qty as decimal(18,3),",
						"          yearno as decimal(15,0),",
						"          period as decimal(15,0),",
						"          batchref as string,",
						"          trtyp as string,",
						"          uuserid as string,",
						"          inputdate as date,",
						"          stat as string,",
						"          project as string,",
						"          panlcode as string,",
						"          del as boolean,",
						"          currency as string,",
						"          secval as decimal(17,2),",
						"          qunit as string,",
						"          workstage as string,",
						"          resource as string,",
						"          unqkey as string,",
						"          costcentre as string,",
						"          expensecode as string,",
						"          upuser as string,",
						"          upddate as date,",
						"          updtime as integer,",
						"          product as string,",
						"          sourceref as string,",
						"          {vat-code} as string,",
						"          UpdatedDateTime as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     inputs:['@LastModifedDate' -> ($LastRunDate)],",
						"     procedureName: 'sp_oa_pctrans_DW',",
						"     schemaName: 'dbo',",
						"     resultSet: true,",
						"     format: 'procedure') ~> pctrans",
						"source(output(",
						"          CostCentreID as integer,",
						"          CostCentre as string,",
						"          FromDate as date,",
						"          ToDate as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT [CostCentreID]\\n      ,[CostCentre]\\n      ,[FromDate]\\n      ,[ToDate]\\n       FROM [DW].[DimCostCentre]',",
						"     format: 'query') ~> CostCentre",
						"source(output(",
						"          DocumentTypeID as integer,",
						"          DocID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT [DocumentTypeID]\\n      ,[DocID]\\n  FROM [DW].[DimDocumentType]',",
						"     format: 'query') ~> DocumentType",
						"source(output(",
						"          TransactionTypeID as integer,",
						"          trtyp as string,",
						"          LedgerCode as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT[TransactionTypeID]\\n      ,[trtyp], [LedgerCode]\\n  FROM [DW].[DimTransactionType]',",
						"     format: 'query') ~> TransactionType",
						"source(output(",
						"          ActivityCodeID as integer,",
						"          ActivityCode as string,",
						"          FromDate as date,",
						"          ToDate as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT [ActivityCodeID]\\n      ,[ActivityCode]\\n      ,[FromDate]\\n      ,[ToDate]\\n  FROM [DW].[DimActivityCode]',",
						"     format: 'query') ~> ActivityCode",
						"source(output(",
						"          WorkStageID as integer,",
						"          WorkStageCode as string,",
						"          FromDate as date,",
						"          ToDate as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT [WorkStageID]\\n      ,[WorkStageCode]\\n       ,[FromDate]\\n       ,[ToDate]\\n  FROM [DW].[DimWorkStage]',",
						"     format: 'query') ~> WorkStage",
						"source(output(",
						"          ProjectID as integer,",
						"          ProjectCode as string,",
						"          FromDate as date,",
						"          ToDate as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT [ProjectID]\\n      ,[ProjectCode]\\n      ,[FromDate]\\n      ,[ToDate]\\n  FROM [DW].[DimProject]',",
						"     format: 'query') ~> Project",
						"DocTypeLookup, CostCentre lookup(pctrans@costcentre == CostCentre@CostCentre",
						"     && docdate >= FromDate",
						"     && docdate <= ToDate,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'right')~> CosstCentreLookup",
						"ProjectLookup derive(NewCostCentreID = iif(isNull(CostCentreID), -1,CostCentreID),",
						"          NewDocumentID = iif(isNull(DocumentTypeID), -1, DocumentTypeID),",
						"          NewTransactionTypeID = iif(isNull(TransactionTypeID), -1, TransactionTypeID),",
						"          LastModifiedDate = currentUTC('GMT'),",
						"          NewActivityCodeID = iif(isNull(ActivityCodeID), -1, ActivityCodeID),",
						"          DocumentDateID = toInteger(toString(docdate, 'yyyyMMdd')),",
						"          InputDateID = toInteger(toString(inputdate, 'yyyyMMdd')),",
						"          YearNo = toInteger(yearno),",
						"          Period = toInteger(period),",
						"          NewWorkStageID = iif(isNull(WorkStageID), -1, WorkStageID),",
						"          NewProjectID = iif(isNull(ProjectID), -1, ProjectID)) ~> DerivedColumns",
						"DerivedColumns select(mapColumn(",
						"          unqkey,",
						"          DocumentDateID,",
						"          CostCentreID = NewCostCentreID,",
						"          DocumentTypeID = NewDocumentID,",
						"          TransactionTypeID = NewTransactionTypeID,",
						"          LastModifiedDateTime = LastModifiedDate,",
						"          ActivityCodeID = NewActivityCodeID,",
						"          SourceReference = sourceref,",
						"          Description = description,",
						"          BaseValue = baseval,",
						"          CurrentValue = currvalue,",
						"          Quantity = qty,",
						"          QuantityUnits = qunit,",
						"          YearNo = DerivedColumns@YearNo,",
						"          Period = DerivedColumns@Period,",
						"          BatchReference = batchref,",
						"          InputDateID,",
						"          DocumentNumber = docnumber,",
						"          VatCode = {vat-code},",
						"          LineNo = line_no,",
						"          ProjectID = NewProjectID,",
						"          WorkStageID = NewWorkStageID,",
						"          Currency = currency,",
						"          Resource = resource,",
						"          unqkey,",
						"          Deleted = del",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Staging",
						"pctrans, DocumentType lookup({doc-id} == DocID,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'right')~> DocTypeLookup",
						"CosstCentreLookup, TransactionType lookup(pctrans@trtyp == TransactionType@trtyp,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'right')~> TransactionTypeLookup",
						"Staging alterRow(upsertIf(true())) ~> AlterRowSettings",
						"TransactionTypeLookup, ActivityCode lookup(expensecode == ActivityCode",
						"     && docdate >= ActivityCode@FromDate",
						"     && docdate <= ActivityCode@ToDate,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'right')~> ActivityCodeLookup",
						"ActivityCodeLookup, WorkStage lookup(workstage == WorkStageCode",
						"     && docdate >= WorkStage@FromDate",
						"     && docdate <= WorkStage@ToDate,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'right')~> WorkStageLookup",
						"WorkStageLookup, Project lookup(project == ProjectCode",
						"     && docdate >= Project@FromDate",
						"     && docdate <= Project@ToDate,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'right')~> ProjectLookup",
						"AlterRowSettings sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          unqkey as string,",
						"          CostCentreID as integer,",
						"          DocumentTypeID as integer,",
						"          TransactionTypeID as integer,",
						"          ActivityCodeID as integer,",
						"          WorkStageID as integer,",
						"          ProjectID as integer,",
						"          DocumentDateID as integer,",
						"          InputDateID as integer,",
						"          BatchReference as string,",
						"          DocumentNumber as integer,",
						"          LineNo as integer,",
						"          YearNo as integer,",
						"          Period as integer,",
						"          SourceReference as string,",
						"          Description as string,",
						"          BaseValue as decimal(18,2),",
						"          CurrentValue as decimal(18,2),",
						"          Quantity as decimal(18,3),",
						"          QuantityUnits as string,",
						"          VatCode as string,",
						"          Resource as string,",
						"          Currency as string,",
						"          Deleted as boolean,",
						"          LastModifiedDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['unqkey'],",
						"     format: 'table',",
						"     batchSize: 10000,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          unqkey,",
						"          CostCentreID,",
						"          DocumentTypeID,",
						"          TransactionTypeID,",
						"          ActivityCodeID,",
						"          WorkStageID,",
						"          ProjectID,",
						"          DocumentDateID,",
						"          InputDateID,",
						"          BatchReference,",
						"          DocumentNumber,",
						"          LineNo,",
						"          YearNo,",
						"          Period,",
						"          SourceReference,",
						"          Description,",
						"          BaseValue,",
						"          CurrentValue,",
						"          Quantity,",
						"          QuantityUnits,",
						"          VatCode,",
						"          Resource,",
						"          Currency,",
						"          Deleted,",
						"          LastModifiedDateTime",
						"     )) ~> FactSync"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Reception_db')]",
				"[concat(variables('factoryId'), '/datasets/TivoliDW_db')]",
				"[concat(variables('factoryId'), '/datasets/FactPT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/oa_fact_PurchaseOrder_df')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Tivoli Data Warehouse"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Reception_db",
								"type": "DatasetReference"
							},
							"name": "podetail"
						},
						{
							"dataset": {
								"referenceName": "TivoliDW_db",
								"type": "DatasetReference"
							},
							"name": "Supplier"
						},
						{
							"dataset": {
								"referenceName": "TivoliDW_db",
								"type": "DatasetReference"
							},
							"name": "ActivityCode"
						},
						{
							"dataset": {
								"referenceName": "TivoliDW_db",
								"type": "DatasetReference"
							},
							"name": "WorkStage"
						},
						{
							"dataset": {
								"referenceName": "TivoliDW_db",
								"type": "DatasetReference"
							},
							"name": "Project"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "FactPO",
								"type": "DatasetReference"
							},
							"name": "FactSync"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumns"
						},
						{
							"name": "Staging"
						},
						{
							"name": "AlterRowSettings"
						},
						{
							"name": "WorkStageLookup"
						},
						{
							"name": "ProjectLookup"
						},
						{
							"name": "SupplierLookup"
						},
						{
							"name": "ActivityCodeLookup"
						}
					],
					"scriptLines": [
						"parameters{",
						"     LastRunDate as string (\"2022-05-09 00:00:00\")",
						"}",
						"source(output(",
						"          OrderNumber as integer,",
						"          OrderReference as string,",
						"          SupplierCode as string,",
						"          OrderDate as date,",
						"          RevDate as date,",
						"          OrderValue as decimal(17,2),",
						"          CreatedDate as date,",
						"          OrderStatus as string,",
						"          DeliveryPostCode as string,",
						"          Branch as string,",
						"          RecordType as string,",
						"          OutstandingValue as decimal(17,2),",
						"          CustomerReference as string,",
						"          CurrencyCode as string,",
						"          CurrencyRate as decimal(21,6),",
						"          OrderBaseValue as decimal(17,2),",
						"          OrderBaseOutstanding as decimal(17,2),",
						"          Period as integer,",
						"          Year as string,",
						"          CreatedTimeID as integer,",
						"          EndDate as date,",
						"          RequestedBy as string,",
						"          DeliveryAddress as string,",
						"          InvoiceAddress as string,",
						"          OrderAddress as string,",
						"          OrderPostCode as string,",
						"          MatchDate as date,",
						"          LineNo as integer,",
						"          LineTotal as decimal(17,2),",
						"          Price as decimal(17,5),",
						"          Discount as decimal(17,2),",
						"          Quantity as decimal(18,3),",
						"          OutStandingTotal as decimal(17,2),",
						"          ItemDescription as string,",
						"          Units as string,",
						"          VatCode as string,",
						"          ActivityCode as string,",
						"          OutstandingQty as decimal(18,3),",
						"          LineStatus as string,",
						"          AllocatedQty as decimal(18,3),",
						"          DispatchedQty as decimal(18,3),",
						"          UnderPickedQty as decimal(18,3),",
						"          NewPrice as decimal(17,5),",
						"          BaseValue as decimal(17,2),",
						"          BaseValueOutstanding as decimal(17,2),",
						"          DueDate as date,",
						"          BasePrice as decimal(17,5),",
						"          Project as string,",
						"          AmendmentDate as date,",
						"          Workstage as string,",
						"          OALastModifiedDateTime as string,",
						"          UpdatedDateTime as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     inputs:['@LastModifedDate' -> ($LastRunDate)],",
						"     procedureName: 'sp_oa_podetail_DW',",
						"     schemaName: 'dbo',",
						"     resultSet: true,",
						"     format: 'procedure') ~> podetail",
						"source(output(",
						"          SupplierID as integer,",
						"          SupplierCode as string,",
						"          FromDate as date,",
						"          ToDate as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT  [SupplierID]\\n      ,[SupplierCode]\\n      ,[FromDate]\\n      ,[ToDate]\\n  FROM [DW].[DimSupplier]',",
						"     format: 'query') ~> Supplier",
						"source(output(",
						"          ActivityCodeID as integer,",
						"          ActivityCode as string,",
						"          FromDate as date,",
						"          ToDate as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT [ActivityCodeID]\\n      ,[ActivityCode]\\n      ,[FromDate]\\n      ,[ToDate]\\n  FROM [DW].[DimActivityCode]',",
						"     format: 'query') ~> ActivityCode",
						"source(output(",
						"          WorkStageID as integer,",
						"          WorkStageCode as string,",
						"          FromDate as date,",
						"          ToDate as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT [WorkStageID]\\n      ,[WorkStageCode]\\n       ,[FromDate]\\n       ,[ToDate]\\n  FROM [DW].[DimWorkStage]',",
						"     format: 'query') ~> WorkStage",
						"source(output(",
						"          ProjectID as integer,",
						"          ProjectCode as string,",
						"          FromDate as date,",
						"          ToDate as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT [ProjectID]\\n      ,[ProjectCode]\\n      ,[FromDate]\\n      ,[ToDate]\\n  FROM [DW].[DimProject]',",
						"     format: 'query') ~> Project",
						"ProjectLookup derive(NewSupplierID = iif(isNull(SupplierID), -1,SupplierID),",
						"          NewActivityCodeID = iif(isNull(ActivityCodeID), -1, ActivityCodeID),",
						"          LastModifiedDateTime = currentUTC('GMT'),",
						"          Period = toInteger(Period),",
						"          NewWorkStageID = iif(isNull(WorkStageID), -1, WorkStageID),",
						"          NewProjectID = iif(isNull(ProjectID), -1, ProjectID),",
						"          OrderDateID = toInteger(toString(OrderDate, 'yyyyMMdd')),",
						"          REvDateID = toInteger(toString(RevDate, 'yyyyMMdd')),",
						"          CreatedDateID = toInteger(toString(CreatedDate, 'yyyyMMdd')),",
						"          MatchDateID = toInteger(toString(MatchDate, 'yyyyMMdd')),",
						"          DueDateID = toInteger(toString(DueDate, 'yyyyMMdd')),",
						"          AmendmentDateID = toInteger(toString(AmendmentDate, 'yyyyMMdd')),",
						"          EndDateID = toInteger(toString(EndDate, 'yyyyMMdd'))) ~> DerivedColumns",
						"DerivedColumns select(mapColumn(",
						"          OrderNumber,",
						"          OrderReference,",
						"          OrderValue,",
						"          OrderStatus,",
						"          DeliveryPostCode,",
						"          Branch,",
						"          RecordType,",
						"          OutstandingValue,",
						"          CustomerReference,",
						"          CurrencyCode,",
						"          CurrencyRate,",
						"          OrderBaseValue,",
						"          OrderBaseOutstanding,",
						"          Period,",
						"          Year,",
						"          CreatedTimeID,",
						"          RequestedBy,",
						"          DeliveryAddress,",
						"          InvoiceAddress,",
						"          OrderAddress,",
						"          OrderPostCode,",
						"          MatchDate,",
						"          LineNo,",
						"          LineTotal,",
						"          Price,",
						"          Discount,",
						"          Quantity,",
						"          OutStandingTotal,",
						"          ItemDescription,",
						"          Units,",
						"          VatCode,",
						"          OutstandingQty,",
						"          LineStatus,",
						"          AllocatedQty,",
						"          DispatchedQty,",
						"          UnderPickedQty,",
						"          NewPrice,",
						"          BaseValue,",
						"          BaseValueOutstanding,",
						"          BasePrice,",
						"          Project,",
						"          SupplierID = NewSupplierID,",
						"          ActivityCodeID = NewActivityCodeID,",
						"          WorkStageID = NewWorkStageID,",
						"          ProjectID = NewProjectID,",
						"          OrderDateID,",
						"          REvDateID,",
						"          CreatedDateID,",
						"          MatchDateID,",
						"          DueDateID,",
						"          AmendmentDateID,",
						"          EndDateID,",
						"          LastModifiedDateTime",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Staging",
						"Staging alterRow(upsertIf(true())) ~> AlterRowSettings",
						"ActivityCodeLookup, WorkStage lookup(Workstage == WorkStageCode",
						"     && OrderDate >= WorkStage@FromDate",
						"     && OrderDate <= WorkStage@ToDate,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'right')~> WorkStageLookup",
						"WorkStageLookup, Project lookup(Project == ProjectCode",
						"     && OrderDate >= Project@FromDate",
						"     && OrderDate <= Project@ToDate,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'right')~> ProjectLookup",
						"podetail, Supplier lookup(podetail@SupplierCode == Supplier@SupplierCode",
						"     && OrderDate >= FromDate",
						"     && OrderDate <= ToDate,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'right')~> SupplierLookup",
						"SupplierLookup, ActivityCode lookup(podetail@ActivityCode == ActivityCode@ActivityCode",
						"     && OrderDate >= ActivityCode@FromDate",
						"     && OrderDate <= ActivityCode@ToDate,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'right')~> ActivityCodeLookup",
						"AlterRowSettings sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          ActivityCodeID as integer,",
						"          SupplierID as integer,",
						"          ProjectID as integer,",
						"          WorkstageID as integer,",
						"          OrderDateID as integer,",
						"          RevDateID as integer,",
						"          CreatedDateID as integer,",
						"          CreatedTimeID as integer,",
						"          DueDateID as integer,",
						"          EndDateID as integer,",
						"          MatchDateID as integer,",
						"          AmendmentDateID as integer,",
						"          OrderNumber as integer,",
						"          OrderReference as string,",
						"          OrderValue as decimal(18,2),",
						"          OrderStatus as string,",
						"          DeliveryPostCode as string,",
						"          Branch as string,",
						"          RecordType as string,",
						"          OutstandingValue as decimal(18,2),",
						"          CustomerReference as string,",
						"          CurrencyCode as string,",
						"          CurrencyRate as decimal(21,6),",
						"          OrderBaseValue as decimal(18,2),",
						"          OrderBaseOutstanding as decimal(18,2),",
						"          Period as integer,",
						"          Year as string,",
						"          RequestedBy as string,",
						"          DeliveryAddress as string,",
						"          InvoiceAddress as string,",
						"          OrderAddress as string,",
						"          OrderPostCode as string,",
						"          LineNo as integer,",
						"          LineTotal as decimal(18,2),",
						"          Price as decimal(17,5),",
						"          Discount as decimal(18,2),",
						"          Quantity as decimal(18,3),",
						"          OutStandingTotal as decimal(18,2),",
						"          ItemDescription as string,",
						"          Units as string,",
						"          VatCode as string,",
						"          OutstandingQty as decimal(18,3),",
						"          LineStatus as string,",
						"          AllocatedQty as decimal(18,3),",
						"          DispatchedQty as decimal(18,3),",
						"          UnderPickedQty as decimal(18,3),",
						"          NewPrice as decimal(17,5),",
						"          BaseValue as decimal(18,2),",
						"          BaseValueOutstanding as decimal(18,2),",
						"          BasePrice as decimal(17,5),",
						"          LastModifiedDateTime as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['Branch','RecordType','OrderNumber','LineNo'],",
						"     format: 'table',",
						"     batchSize: 10000,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ActivityCodeID,",
						"          SupplierID,",
						"          ProjectID,",
						"          WorkstageID = WorkStageID,",
						"          OrderDateID,",
						"          RevDateID = REvDateID,",
						"          CreatedDateID,",
						"          CreatedTimeID,",
						"          DueDateID,",
						"          EndDateID,",
						"          MatchDateID,",
						"          AmendmentDateID,",
						"          OrderNumber,",
						"          OrderReference,",
						"          OrderValue,",
						"          OrderStatus,",
						"          DeliveryPostCode,",
						"          Branch,",
						"          RecordType,",
						"          OutstandingValue,",
						"          CustomerReference,",
						"          CurrencyCode,",
						"          CurrencyRate,",
						"          OrderBaseValue,",
						"          OrderBaseOutstanding,",
						"          Period,",
						"          Year,",
						"          RequestedBy,",
						"          DeliveryAddress,",
						"          InvoiceAddress,",
						"          OrderAddress,",
						"          OrderPostCode,",
						"          LineNo,",
						"          LineTotal,",
						"          Price,",
						"          Discount,",
						"          Quantity,",
						"          OutStandingTotal,",
						"          ItemDescription,",
						"          Units,",
						"          VatCode,",
						"          OutstandingQty,",
						"          LineStatus,",
						"          AllocatedQty,",
						"          DispatchedQty,",
						"          UnderPickedQty,",
						"          NewPrice,",
						"          BaseValue,",
						"          BaseValueOutstanding,",
						"          BasePrice,",
						"          LastModifiedDateTime",
						"     )) ~> FactSync"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Reception_db')]",
				"[concat(variables('factoryId'), '/datasets/TivoliDW_db')]",
				"[concat(variables('factoryId'), '/datasets/FactPO')]"
			]
		}
	]
}